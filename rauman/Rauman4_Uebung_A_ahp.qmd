---
date: 2022-12-06
lesson: RaumAn4
thema: Analytical Hierarchy Process (AHP)
index: 1
---

# Rauman 4: Übung A

```{r}
#| include: false
#| purl: false
knitr::opts_chunk$set(echo = FALSE)
```

Nachdem Sie nun die Theorie kennengelernt haben, werden Sie ein konkretes Beispiel für einen Analytischen Hierarchieprozess (AHP) durchführen. Dies ist ein manueller Ansatz, um Ihnen die Grundlagen eines AHP zu zeigen. Wenn Sie einen komplexeren AHP erstellen möchten, können Sie spezielle R AHP-Pakete verwenden, wie zum Beispiel [ahpsurvey package](https://cran.r-project.org/web/packages/ahpsurvey/vignettes/my-vignette.html).

## Übung 1: Definieren Sie die Ausgangssituation 

Denken Sie zunächst an eine *aktuelle Entscheidung*, vor der Sie gerade stehen oder gestanden haben (z. B. Fahrradkauf oder Wohnungsmiete), und definieren Sie die folgenden Punkte.

* Ein Ziel für Ihren AHP (z.B. Wohnungsmiete)
* 4 Kriterien, auf die Sie Ihre Entscheidung stützen wollen (z. B. *Preis*, *Entfernung zur Arbeit/Schule*, *Grösse*, *Schönheit der Landschaft*)
* 3 verschiedene Optionen/Alternativen (z. B. 3 verschiedene Wohnungen)

```{r}
# Ziel: Eine neue Wohnung mieten Die 4 Kriterien, die wir verwenden werden, sind:

# Citeria: 
# - Preis
# - Entfernung zur Arbeit
# - Grösse
# - Schönheit der Landschaft

# Optionen/Alternativen
# 1. Weinbergstrasse 17, 8134 Adliswil, 35 m2 für 1'455 CHF, nicht so schön und 45 Minuten von der Arbeit entfernt
# 2. Zürichstrasse 56, 8134 Adliswil, 104 m2 für 2'960.- CHF, sehr hübsch und 45 Minuten von der Arbeit entfernt
# 3. Geissbergstrasse 18, 8184 Bachenbülach, 130 m2 für 3'800 CHF, sehr schön und 30 Minuten von der Arbeit entfernt
```

## Übung 2: Paarweiser Vergleich 1 & 2

n einem ersten Schritt muss jedes Kriterium paarweise mit einem anderen Kriterium verglichen werden. Verwenden Sie die folgende Skala zur Gewichtung der Kriterien (siehe @tbl-ahprating). 

```{r}
#| echo: false
#| purl: false
#| label: tbl-ahprating
#| tbl-cap: AHP Skala Gewichtungen
library(dplyr)

tibble::tribble(
  ~Wert,	~Definition,
  1, "Die beiden Merkmale sind gleich wichtig",
  3, "Kriterium A ist etwas wichtiger als Kriterium B",
  5, "Kriterium A ist mässig wichtiger als Kriterium B",
  7, "Kriterium A ist deutlich wichtiger als Kriterium B",
  9, "Kriterium A ist absolut wichtiger als Kriterium B",
  c(2,4,6,8), "Zwischenwerte"
) |>
  knitr::kable(caption = "Skala zur Gewichtung der Kriterien.")
```

Sie können den folgenden Code verwenden, um Ihre Gewichtungsmatrix zu erstellen. In der Matrix werden zwei Kriterien immer zweimal verglichen, und diese beiden Vergleiche sollten den Kehrwert des jeweils anderen darstellen. Zur Veranschaulichung haben wir einen Vergleich hinzugefügt, der wie folgt lautet: 

- Zeile 1, Spalte 2: *Kriterium 1* ist etwas wichtiger als *Kriterium 2*
- Zeile 2, Spalte 1: *Kriterium 2* ist etwas weniger wichtig als *Kriterium 1*

Erstellen Sie diesen Matrixvergleich, der Ihren Kriterien entspricht, und ersetzen Sie die "0"-Werte durch Ihre Gewichte gemäss der @tbl-ahprating. Beachten Sie, dass alle Diagonalwerte gleich "1" sein sollten

```{r}
#| echo: true
pairwise_comparison <- c(
  1,   3, 0, 0,
  1/3, 1, 0, 0,
  0,   0, 1, 0,
  0,   0, 0, 1
) |> matrix(ncol = 4, byrow = TRUE) 
```

```{r}
# criteria 1: Price
# criteria 2: Distance to work
# criteria 3: Size
# criteria 4: Scenic Beauty
pairwise_comparison <- c(
  1,   5,   9,   9,
  1/5, 1,   6,   7,
  1/9, 1/6, 1,   7,
  1/9, 1/7, 1/7, 1
) |>
  matrix(ncol = 4, byrow = TRUE)
```

**Tipp**: Fügen Sie Spalten- und Zeilennamen hinzu, damit Ihre Matrix besser lesbar ist. 

```{r}
#| echo: true
criterias <- c("price", "distance", "size", "beauty")

rownames(pairwise_comparison) <- criterias
colnames(pairwise_comparison) <- criterias
```

## Übung 3: Berechnung der Kriteriengewichte 

### Übung 3.1: Normalisierung der Matrix (Berechnung der Kritiriengewichte 1)

Im nächsten Schritt muss die Matrix normalisiert werden (siehe @fig-criteria-normalize). Dies kann in den folgenden zwei Schritten erfolgen: 

1. Berechnen Sie die Summe jeder Spalte mit `colSums`. Speichern Sie die Ausgabe in einer Variablen (z.B. `ahp_colsums`).
2. Teilen Sie jeden Wert in der Matrix durch die entsprechende Spaltensumme. Um dies zu erreichen, können Sie die Funktion `sweep()` auf die Matrix anwenden, die der Funktion `apply` sehr ähnlich ist (verwenden Sie `MARGIN = 2` (Spalten), `STATS = ahp_colsums` und `FUN = "/"`).


```{r}
ahp_colsums <- colSums(pairwise_comparison)

pairwise_comparison_normalized <- sweep(pairwise_comparison, 2,ahp_colsums, FUN = "/")
```

![Normalisierung der Kriterien](images/criteria_normalize.png){#fig-criteria-normalize}

### Übung 3.2: Gewichtung der Kriterien (Berechnung der Kritiriengewichte 2)

Dies ist der letzte Schritt zur Berechnung der Gewichtung der einzelnen Kriterien (siehe @fig-weights-normalize). Dies geschieht wie folgt:

1. Berechne die Summe jeder Zeile und speichere das Ergebnis in einer Variablen (z.B. `criteria_sum`). 
2. Dividiere die Summe der Kriterien durch die Summe der Kriterien und speichere das Ergebnis in einer Variablen (z.B. `criteria_weight`).

Hinweis: Die Summe von `criteria_weight` sollte 1 sein.

```{r}
#| include: false
criteria_sums <- rowSums(pairwise_comparison_normalized)

criteria_weight <- criteria_sums/sum(criteria_sums)

sum(criteria_weight)
```

![Gewichtung der Kriterien](images/weights_normalize.png){#fig-weights-normalize}

## Übung 4: Konsistenzanalyse (Konsistenzanalyse 1 & 2)

Nachdem der paarweise Vergleich durchgeführt wurde, muss eine Konsistenzanalyse durchgeführt werden, um zu prüfen, ob die paarweisen Vergleiche konsistent sind oder dieser Widersprüche enthalten. Eine gewisse Inkonsistenz ist im Rahmen eines AHP zulässig, sie sollte aber nicht zu gross sein.

Um die Konsistenz zu berechnen, sollten Sie wie in Folie 30 (Konsistenzanalyse 1) und den folgenden Schritten vorgehen:

1. Führen Sie eine Matrixmultiplikation (`%*%`) zwischen `pairwise_comparison` und `criteria_weight` durch. 

```{r}
a_values <- pairwise_comparison %*% criteria_weight
```

2. Dividiere das Ergebnis von 1) durch `criteria_weight`

```{r}
b_values <- a_values / criteria_weight
```

3. Berechnen Sie $\lambda_{max}$, indem Sie die Summe des in 2) erhaltenen Ergebnisses durch die Anzahl der Kriterien dividieren

```{r}
lambda_max = sum(a_values)/ncol(pairwise_comparison)
```

4. Berechnung von $CI$ ($CI = \frac{\lambda_{max} - n}{n-1}$), wobei "n" der Anzahl der Kriterien entspricht

```{r}
CI <- (lambda_max - ncol(pairwise_comparison)) / (ncol(pairwise_comparison)-1)
```

5. Ermitteln Sie $RI$ durch Nachschlagen in der @fig-ahp-random-index-by-saaty

```{r}
RI <- 0.89
```

5. Berechnen Sie $CR$ ($CR = CI / RI$)

```{r}
CR <- CI/RI
```

6. Wenn CR > 0,1 ist, müssen Sie Ihre paarweisen Vergleiche neu bewerten. 

```{r}
#| include: false
CR < 0.1
```

![AHP Random Index by Saaty](images/ahp_random_index_by_saaty.png){#fig-ahp-random-index-by-saaty}

## Gratuliere!

Sie haben nun die Gewichte bestimmt, auf denen Sie Ihre Entscheidung aufbauen können, und haben festgestellt, ob diese Gewichte konsistent sind oder nicht. Diese nächsten Schritte sind technisch gesehen sehr ähnlich zu dem, was Sie in der obigen Übung getan haben, daher überlassen wir es Ihnen, ob Sie diese Schritte ausführen wollen oder nicht. Der Vollständigkeit halber sei gesagt, dass der nächsten Schritte folgende wären:

1. Vergleichen Sie Ihre Optionen/Alternativen in einem paarweisen Vergleich miteinander (ähnlich wie Sie die Kriterien miteinander verglichen haben). Dies tun Sie für *jedes* Kriterium
2. Normalisieren Sie die paarweisen Vergleiche Ihrer Optionen (ähnlich wie Sie die paarweisen Vergleiche der Kriterien normalisiert haben)
3. Verwenden Sie die Gewichte, die Sie in der obigen Übung ermittelt haben, um Ihre Ergebnisse aus 2) zu gewichten
4. Bestimmen Sie die beste Entscheidung auf der Grundlage des Ergebnisses aus 3)
