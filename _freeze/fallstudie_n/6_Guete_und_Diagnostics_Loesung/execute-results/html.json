{
  "hash": "1d7b79f2ce509e9895f02746e0115132",
  "result": {
    "markdown": "---\nexecute:\n  echo: true\nformat:\n  html:\n    code-tools:\n      source: true\n---\n\n\n## 6. Modellgüte und -diagnostics MM / Habitatselektionsmodell - Lösung\n\n### Libraries laden\n\nNeue packages die wir für die Modelle und die Diagnostics brauchen\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# neue Packages: DHARMa, car, MASS, ROCR, sjPlot, sjstats, ggeffects, cowplot, gstat\n\nipak <- function(pkg){\n  new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) \n    install.packages(new.pkg, repos = \"http://cran.us.r-project.org\", dependencies = TRUE)\n  sapply(pkg, require, character.only = TRUE)\n}\n\npackages <- c(\"lme4\", \"bbmle\", \"MuMIn\", \"tidyverse\", \"DHARMa\", \"car\", \"MASS\", \"ROCR\", \n              \"sjPlot\",  \"ggeffects\", \"sjstats\", \"cowplot\", \"magrittr\", \"gstat\")\n\nipak(packages)\n```\n:::\n\n\n### Ausgangslage\n\n- Der Modellfit von letzter Woche als Ausgangspunkt für die heutige Übung\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# | results: hide\nDF_mod_day <- read_delim(\"data/Aufgabe4_Datensatz_Habitatnutzung_Modelle_20211101_moodle.csv\",\n    delim = \";\") %>%\n    filter(time_of_day == \"day\") %>%\n    mutate(slope_scaled = scale(slope), us_scaled = scale(us), os_scaled = scale(os),\n        forest_prop_scaled = scale(forest_prop), dist_road_all_scaled = scale(dist_road_all),\n        dist_road_only_scaled = scale(dist_road_only), dist_build_scaled = scale(dist_build),\n        id = as.factor(id))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: 'data/Aufgabe4_Datensatz_Habitatnutzung_Modelle_20211101_moodle.csv' does not exist in current working directory ('C:/Users/sigb/Beni/WPZ_Fallstudie/HS22').\n```\n:::\n\n```{.r .cell-code}\nf <- pres_abs ~ slope_scaled + us_scaled + os_scaled + forest_prop_scaled + dist_road_only_scaled +\n    dist_build_scaled\n\nf <- paste(c(f, \"+ (1 | id)\"), collapse = \" \") %>%\n    as.formula()\n\nm_day <- glmer(f, data = DF_mod_day, family = binomial, na.action = \"na.fail\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: bad 'data': object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\nall_m <- dredge(m_day)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in nobs(global.model): object 'm_day' not found\n```\n:::\n\n```{.r .cell-code}\navgmodel <- model.avg(all_m, rank = \"AICc\", subset = delta < 2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in model.avg(all_m, rank = \"AICc\", subset = delta < 2): object 'all_m' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(avgmodel)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'avgmodel' not found\n```\n:::\n:::\n\n\n- Die Modellresultate aus dem avgmodel sind grundätzlich die finalen Resultate die bereits interpretiert werden könnten. Allerdings funktionieren die Diagnosetests und die Darstellung der Resultate mit diesem gemittelten Modell nicht sehr gut, weshalb wir einen re-fit mit glmer machen müssen (an den Resultaten ändert sich dadurch nichts) \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# hier noch zum Vergleich, dass die Resulate sich nur marginal verändern \n\nsummary(avgmodel)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'avgmodel' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(m_day)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'm_day' not found\n```\n:::\n\n```{.r .cell-code}\n# https://stats.stackexchange.com/questions/153611/interpreting-random-effect-variance-in-glmer\n\n# 95% range of the roe deer effects is approximately: -0.97 - 0.97\n```\n:::\n\n\n### Aufgabe 1\n\nBerechung der AUC (area under the receiver operating characteristic curve)**= Mass der Modellgüte**\n\nFür die Berechnung des AUC findet ihr weiterführende Informationen unter: [Link](https://www.wsl.ch/staff/niklaus.zimmermann/programs/progs/simtest.pdf) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nprob <- predict(m_day,type=c(\"response\"))   \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'predict': object 'm_day' not found\n```\n:::\n\n```{.r .cell-code}\npred <- prediction(prob, DF_mod_day$pres_abs)    \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(predictions): object 'prob' not found\n```\n:::\n\n```{.r .cell-code}\n# AUC\n\nauc <- performance(pred, measure = \"auc\")@y.values[[1]]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in performance(pred, measure = \"auc\"): object 'pred' not found\n```\n:::\n\n```{.r .cell-code}\nauc\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'auc' not found\n```\n:::\n:::\n\n\n### Aufgabe 2\n\nInterpretieren der Modell-Residuen mittels Tests auf verschiedene Aspekte\n\n- Model testing for over/underdispersion, zeroinflation and spatial autocorrelation following the DHARMa package.\n- unbedingt die Vignette des DHARMa-Package konsultieren: [Link](https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Residuals werden über eine Simulation auf eine Standard-Skala transformiert und \n# können anschliessend getestet werden. Dabei kann die Anzahl Simulationen eingestellt \n# werden (dauert je nach dem sehr lange)\n\nsimulationOutput <- simulateResiduals(fittedModel = m_day, n = 10000)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in class(fittedModel)[1] %in% getPossibleModels(): object 'm_day' not found\n```\n:::\n\n```{.r .cell-code}\n# plotting and testing scaled residuals\n\nplot(simulationOutput)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'simulationOutput' not found\n```\n:::\n\n```{.r .cell-code}\ntestResiduals(simulationOutput)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ensureDHARMa(simulationOutput, convert = T): object 'simulationOutput' not found\n```\n:::\n\n```{.r .cell-code}\n# The most common concern for GLMMs is overdispersion, underdispersion and \n# zero-inflation.\n\n# separate test for dispersion\n\ntestDispersion(simulationOutput)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ensureDHARMa(simulationOutput, convert = \"Model\"): object 'simulationOutput' not found\n```\n:::\n\n```{.r .cell-code}\n# test for Zeroinflation\n\ntestZeroInflation(simulationOutput)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ensureDHARMa(simulationOutput, convert = \"Model\"): object 'simulationOutput' not found\n```\n:::\n\n```{.r .cell-code}\n# test for spatial Autocorrelation\n\n# calculating x, y positions per group\ngroupLocations = aggregate(DF_mod_day[, 3:4], list(DF_mod_day$x, DF_mod_day$y), mean)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in aggregate(DF_mod_day[, 3:4], list(DF_mod_day$x, DF_mod_day$y), : object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\ngroupLocations$group <- paste(groupLocations$Group.1,groupLocations$Group.2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in paste(groupLocations$Group.1, groupLocations$Group.2): object 'groupLocations' not found\n```\n:::\n\n```{.r .cell-code}\n# calculating residuals per group\nres2 = recalculateResiduals(simulationOutput, group = groupLocations$group)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in recalculateResiduals(simulationOutput, group = groupLocations$group): object 'simulationOutput' not found\n```\n:::\n\n```{.r .cell-code}\n# running the spatial test on grouped residuals\ntestSpatialAutocorrelation(res2, groupLocations$x, groupLocations$y, plot = F)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ensureDHARMa(simulationOutput, convert = T): object 'res2' not found\n```\n:::\n\n```{.r .cell-code}\n# Testen auf Multicollinearität (dh zu starke Korrelationen im finalen Modell, zB falls \n# auf Grund der ökologischen Plausibilität stark korrelierte Variablen im Modell)\n# use VIF values: if values less then 5 is ok (sometimes > 10), if mean of VIF values \n# not substantially greater than 1 (say 5), no need to worry.\n\ncar::vif(m_day)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in car::vif(m_day): object 'm_day' not found\n```\n:::\n\n```{.r .cell-code}\nmean(car::vif(m_day))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'mean': object 'm_day' not found\n```\n:::\n:::\n\n\n### Aufgabe 4 \n\nErmittlung des individuellen Beitrags der einzelen Variablen im Gesamtmodell\n\n- **Bestimmen delta AIC nach Coppes et al. 2017 -> Vergleich des Gesamtmodells gegenüber einem Modell ohne die entsprechende Variable.**\n- **Auftrag auf den 22.11.2021: Jede Gruppe kurze Vorstellung der Modellresultate & Diagnostics im Plenum und Diskussion der Ergebnisse (keine PP-Präsentation nötig)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_os <- glmer(pres_abs ~\n  dist_build_scaled +\n  dist_road_only_scaled +\n  forest_prop_scaled +\n  slope_scaled +\n  us_scaled +\n  (1|id), data= DF_mod_day, family = binomial, na.action = \"na.fail\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: bad 'data': object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\nm_us <- glmer(pres_abs ~\n  dist_build_scaled +\n  dist_road_only_scaled +\n  forest_prop_scaled +\n  slope_scaled +\n  os_scaled +\n  (1|id), data= DF_mod_day, family = binomial, na.action = \"na.fail\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: bad 'data': object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\nm_road <- glmer(pres_abs ~\n  dist_build_scaled +\n  forest_prop_scaled +\n  slope_scaled +\n  us_scaled +\n  os_scaled +\n  (1|id), data= DF_mod_day, family = binomial, na.action = \"na.fail\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: bad 'data': object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\nm_forest <- glmer(pres_abs ~\n  dist_build_scaled +\n  dist_road_only_scaled +\n  slope_scaled +\n  us_scaled +\n  os_scaled +\n  (1|id), data= DF_mod_day, family = binomial, na.action = \"na.fail\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: bad 'data': object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\nm_build <- glmer(pres_abs ~\n  dist_build_scaled +\n  dist_road_only_scaled +\n  forest_prop_scaled +\n  slope_scaled +\n  us_scaled +\n  os_scaled +\n  (1|id), data= DF_mod_day, family = binomial, na.action = \"na.fail\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: bad 'data': object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\nm_slope <- glmer(pres_abs ~\n  dist_build_scaled +\n  dist_road_only_scaled +\n  forest_prop_scaled +\n  us_scaled +\n  os_scaled +\n  (1|id), data= DF_mod_day, family = binomial, na.action = \"na.fail\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: bad 'data': object 'DF_mod_day' not found\n```\n:::\n\n```{.r .cell-code}\nbbmle::AICtab(m_day, m_os, m_us, m_road, m_forest, m_build, m_slope)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ICtab(..., mnames = mnames, type = \"AIC\"): object 'm_day' not found\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}