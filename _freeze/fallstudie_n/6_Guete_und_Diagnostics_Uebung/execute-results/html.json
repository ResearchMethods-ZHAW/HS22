{
  "hash": "f6500b3d1d88f7dc85b0efbb7539f249",
  "result": {
    "markdown": "# 6. Übung\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Modellgüte und -diagnostics MM / Habitatselektionsmodell\n\n\n\n\n\n### Libraries laden\n\nNeue packages die wir für die Modelle und die Diagnostics brauchen\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# neue Packages: DHARMa, car, MASS, ROCR, sjPlot, sjstats,\n# ggeffects, cowplot, gstat\n\nipak <- function(pkg) {\n    new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n    if (length(new.pkg))\n        install.packages(new.pkg, repos = \"http://cran.us.r-project.org\",\n            dependencies = TRUE)\n    sapply(pkg, require, character.only = TRUE)\n}\n\npackages <- c(\"lme4\", \"bbmle\", \"MuMIn\", \"tidyverse\", \"DHARMa\",\n    \"car\", \"MASS\", \"ROCR\", \"sjPlot\", \"ggeffects\", \"sjstats\",\n    \"cowplot\", \"magrittr\", \"gstat\")\n\nipak(packages)\n```\n:::\n\n\n### Ausgangslage\n\n- Der Modellfit von letzter Woche als Ausgangspunkt für die heutige Übung\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDF_mod_day <- read_delim(here(\"data\", \"Aufgabe4_Datensatz_Habitatnutzung_Modelle_20211101_moodle.csv\"),\n    delim = \";\") %>%\n    filter(time_of_day == \"day\") %>%\n    mutate(slope_scaled = scale(slope), us_scaled = scale(us),\n        os_scaled = scale(os), forest_prop_scaled = scale(forest_prop),\n        dist_road_all_scaled = scale(dist_road_all), dist_road_only_scaled = scale(dist_road_only),\n        dist_build_scaled = scale(dist_build), id = as.factor(id))\n\nf <- pres_abs ~ slope_scaled + us_scaled + os_scaled + forest_prop_scaled +\n    dist_road_only_scaled + dist_build_scaled\n\nf <- paste(c(f, \"+ (1 | id)\"), collapse = \" \") %>%\n    as.formula()\n\nm_day <- glmer(f, data = DF_mod_day, family = binomial, na.action = \"na.fail\")\n\nall_m <- dredge(m_day)\n\navgmodel <- model.avg(all_m, rank = \"AICc\", subset = delta <\n    2)\nsummary(avgmodel)\n```\n:::\n\n\n- Die Modellresultate aus dem avgmodel sind grundätzlich die finalen Resultate die bereits interpretiert werden könnten. Allerdings funktionieren die Diagnosetests und die Darstellung der Resultate mit diesem gemittelten Modell nicht sehr gut, weshalb wir einen re-fit mit glmer machen müssen (an den Resultaten ändert sich dadurch nichts) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nf_pres_abs <- pres_abs ~ dist_build_scaled + dist_road_only_scaled +\n    forest_prop_scaled + slope_scaled + us_scaled + os_scaled +\n    (1 | id)\n\nm_day <- glmer(f_pres_abs, data = DF_mod_day, family = binomial,\n    na.action = \"na.fail\")\n\n# hier noch zum Vergleich, dass die Resulate sich nur\n# marginal verändern\n\nsummary(avgmodel)\nsummary(m_day)\n```\n:::\n\n\n### Aufgabe 1\n\nBerechung der AUC (area under the receiver operating characteristic curve) **= Mass der Modellgüte**\n\nFür die Berechnung des AUC findet ihr weiterführende Informationen unter: [Link](https://www.wsl.ch/staff/niklaus.zimmermann/programs/progs/simtest.pdf)) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nprob <- predict(m_day, type = c(\"response\"))\npred <- prediction(prob, DF_mod_day$pres_abs)\n\n`?`(prediction)\n\n# AUC\n\nauc <- performance(pred, measure = \"auc\")@y.values[[1]]\nauc\n```\n:::\n\n\n### Aufgabe 2\n\nInterpretieren der Modell-Residuen mittels Tests auf verschiedene Aspekte\n\n- Model testing for over/underdispersion, zeroinflation and spatial autocorrelation following the DHARMa package.\n- unbedingt die Vignette des DHARMa-Package konsultieren: [Link](https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Residuals werden über eine Simulation auf eine\n# Standard-Skala transformiert und können anschliessend\n# getestet werden. Dabei kann die Anzahl Simulationen\n# eingestellt werden (dauert je nach dem sehr lange)\n\nsimulationOutput <- simulateResiduals(fittedModel = m_day, n = 10000)\n\n# plotting and testing scaled residuals\n\nplot(simulationOutput)\n\ntestResiduals(simulationOutput)\n\n# The most common concern for GLMMs is overdispersion,\n# underdispersion and zero-inflation.\n\n# separate test for dispersion\n\ntestDispersion(simulationOutput)\n\n# test for Zeroinflation\n\ntestZeroInflation(simulationOutput)\n\n# test for spatial Autocorrelation\n\n# calculating x, y positions per group\ngroupLocations = aggregate(DF_mod_day[, 3:4], list(DF_mod_day$x,\n    DF_mod_day$y), mean)\ngroupLocations$group <- paste(groupLocations$Group.1, groupLocations$Group.2)\n\n# calculating residuals per group\nres2 = recalculateResiduals(simulationOutput, group = groupLocations$group)\n\n# running the spatial test on grouped residuals\ntestSpatialAutocorrelation(res2, groupLocations$x, groupLocations$y,\n    plot = F)\n\n# Testen auf Multicollinearität (dh zu starke Korrelationen\n# im finalen Modell, zB falls auf Grund der ökologischen\n# Plausibilität stark korrelierte Variablen im Modell) use\n# VIF values: if values less then 5 is ok (sometimes > 10),\n# if mean of VIF values not substantially greater than 1\n# (say 5), no need to worry.\n\ncar::vif(m_day)\nmean(car::vif(m_day))\n```\n:::\n\n\n### Aufgabe 3\n\nGraphische Darstellung der Modellresultate\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# graphische Darstellung der gesamten Modellresultate\n\nplot_model(m_day, transform = NULL, show.values = TRUE, value.offset = 0.3)\n\n# Plotten der vorhergesagten Wahrscheinlichkeit, dass ein\n# Kreis besetzt ist, in Abhängigkeit der erklärenden\n# Variable basierend auf den Modellresultaten.\n\nplot_model(m_day, type = \"pred\", terms = \"us_scaled [all]\")\n\n# Problem: skalierte Variablen lassen sich nicht so ohne\n# weiteres plotten, hier ein quick- and-dirty hack um das\n# Problem zu umgehen. Die Einstellungen müssen für jede\n# Variable geändert werden\n\np <- plot_model(m_day, type = \"pred\", terms = \"us_scaled [all]\")\n\nlabels <- round(seq(floor(min(DF_mod_day$us)), ceiling(max(DF_mod_day$us)),\n    length.out = 8), 2)\n\np <- p + scale_x_continuous(breaks = c(-1, 0, 1, 2, 3, 4, 5,\n    6), labels = c(labels))\n\np\n\n# Funktion um viele Plots auf einem zusammenbringen:\n# cowplot-package (hat auch sonst gute Funktionen für\n# schöne layouts von Plots)\n\ncowplot::plot_grid()\n```\n:::\n\n\n### Aufgabe 4\n\nErmittlung des individuellen Beitrags der einzelen Variablen im Gesamtmodell\n\n- **Bestimmen delta AIC nach Coppes et al. 2017 -> Vergleich des Gesamtmodells gegenüber einem Modell ohne die entsprechende Variable.**\n- **Auftrag auf den 22.11.2021: Kurze Vorstellung der Modellresultate & Diagnostics im Plenum und Diskussion der Ergebnisse (keine PP-Präsentation nötig)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}