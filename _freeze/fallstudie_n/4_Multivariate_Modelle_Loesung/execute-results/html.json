{
  "hash": "e663e21a72398203ed136a3ee1eed8e1",
  "result": {
    "markdown": "\n# 4. Lösung\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Einstieg Habitatselektionsmodell / Multivariate Modelle\n\n\n\n\n\n### libraries laden\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Funktion um Packages direkt zu installieren und / oder zu laden\n\nipak <- function(pkg){\n  new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) \n    install.packages(new.pkg, repos = \"http://cran.us.r-project.org\", dependencies = TRUE)\n  sapply(pkg, require, character.only = TRUE)\n}\n\npackages <- c(\"tidyverse\", \"PerformanceAnalytics\", \"pastecs\", \"psych\", \"car\")\n\nipak(packages)\n```\n:::\n\n\n### Aufgabe 1: Einlesen des Gesamtdatensatzes von Moodle\n\n- Sichtung des Datensatzes und der Datentypen\n- Kontrolle wieviele Rehe in diesem Datensatz enthalten sind\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDF_mod <- read_delim(here(\"data\",\"Aufgabe4_Datensatz_Habitatnutzung_Modelle_20211101_moodle.csv\"), \n                     delim = \";\")\n\nstr(DF_mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspec_tbl_df [8,370 × 16] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ pres_abs          : num [1:8370] 0 1 0 1 1 1 1 1 1 0 ...\n $ nmb               : num [1:8370] 0 1 0 1 3 1 5 8 2 0 ...\n $ x                 : num [1:8370] 682250 682250 682225 682225 682225 ...\n $ y                 : num [1:8370] 237725 237750 237700 237725 237750 ...\n $ forest            : num [1:8370] 0 0 0 0 0 0 0 0 0 0 ...\n $ slope             : num [1:8370] 10.15 9.97 8.85 10.33 12.66 ...\n $ dist_road_all     : num [1:8370] 60.3 56.3 53.1 68.5 50.2 ...\n $ dist_road_only    : num [1:8370] 60.3 56.3 53.1 68.5 50.2 ...\n $ dist_build        : num [1:8370] 36.16 12.24 57.51 32.52 7.86 ...\n $ forest_prop       : num [1:8370] 0.022246 0.000931 0.018563 0.000824 0 ...\n $ us                : num [1:8370] 0 0.0218 0 0 0 ...\n $ os                : num [1:8370] 0 0.06744 0 0 0.00406 ...\n $ GPStot            : num [1:8370] 420 420 420 420 420 420 420 420 420 420 ...\n $ id                : chr [1:8370] \"RE03\" \"RE03\" \"RE03\" \"RE03\" ...\n $ time_of_day       : chr [1:8370] \"night\" \"night\" \"night\" \"night\" ...\n $ stoerungskategorie: chr [1:8370] \"gering\" \"gering\" \"gering\" \"gering\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   pres_abs = col_double(),\n  ..   nmb = col_double(),\n  ..   x = col_double(),\n  ..   y = col_double(),\n  ..   forest = col_double(),\n  ..   slope = col_double(),\n  ..   dist_road_all = col_double(),\n  ..   dist_road_only = col_double(),\n  ..   dist_build = col_double(),\n  ..   forest_prop = col_double(),\n  ..   us = col_double(),\n  ..   os = col_double(),\n  ..   GPStot = col_double(),\n  ..   id = col_character(),\n  ..   time_of_day = col_character(),\n  ..   stoerungskategorie = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n\n```{.r .cell-code}\nclass(DF_mod$time_of_day)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\ntable(DF_mod$id)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nRE02 RE03 RE04 RE05 RE06 RE07 RE08 RE09 RE10 RE11 RE12 RE13 \n1204  260  512  388  306  484  980  836  492 1208  652 1048 \n```\n:::\n\n```{.r .cell-code}\nDF_mod %>% group_by(id) %>% summarize(anzahl = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   id    anzahl\n   <chr>  <int>\n 1 RE02    1204\n 2 RE03     260\n 3 RE04     512\n 4 RE05     388\n 5 RE06     306\n 6 RE07     484\n 7 RE08     980\n 8 RE09     836\n 9 RE10     492\n10 RE11    1208\n11 RE12     652\n12 RE13    1048\n```\n:::\n\n```{.r .cell-code}\nlength(unique(DF_mod$id))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n:::\n\n\n### Aufgabe 2: Unterteilung des Datensatzes in Teildatensätze entsprechend der Tageszeit\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDF_mod_night <- DF_mod %>%\n  filter(time_of_day == \"night\")\n\nDF_mod_day <- DF_mod %>%\n  filter(time_of_day == \"day\")\n\n# Kontrolle\ntable(DF_mod_night$time_of_day)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nnight \n 4185 \n```\n:::\n\n```{.r .cell-code}\ntable(DF_mod_day$time_of_day)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n day \n4185 \n```\n:::\n:::\n\n\n### Aufgabe 3: Erstellen von Density Plots der Praesenz / Absenz in Abhaengigkeit der unabhaengigen Variablen (für Tag und Nacht)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ein Satz Density Plots für den Tagesdatensatz und einer für den Nachtdatensatz \n\npar(mfrow=c(3,3), mar=c(4, 4, 3, 3))\nfor (i in 6:12) {                           # innerhalb des for()-loops die Nummern der \n                                            # gewuenschten Spalten einstellen\n  d  <-  DF_mod_day %>% pull(i)\n  d  <-  density(d)\n  dp  <-  DF_mod_day %>% filter(pres_abs == 1) %>% pull(i)\n  dp <- density(dp)\n  da  <-  DF_mod_day %>% filter(pres_abs == 0) %>% pull(i)\n  da <- density(da)\n  plot(0,0, type=\"l\", xlim=range(c(dp$x,da$x)), ylim=range(dp$y,da$y), \n       xlab=names(DF_mod_day[i]), ylab=\"Density\")\n  lines(dp$x, dp$y, col=\"blue\")             # Praesenz\n  lines(da$x, da$y, col=\"red\")              # Absenz\n}\n```\n\n::: {.cell-output-display}\n![](4_Multivariate_Modelle_Loesung_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Aufgabe 4: Testen erklärenden Variablen auf Normalverteilung (nur kontinuierlichen) \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# klassischer Weg mit shapiro-wilk (mehrere Spalten, verschiedenene statistische\n# Kenngrössen werden angezeigt. Normalverteilung: Wert ganz unten. p>0.05 = ja)\n\nround(stat.desc(DF_mod_day[6:12], basic= F, norm= T), 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               slope dist_road_all dist_road_only dist_build forest_prop     us\nmedian        13.442        28.248         33.693    129.838       0.632  0.059\nmean          15.055        41.289         46.374    154.502       0.590  0.120\nSE.mean        0.158         0.642          0.665      1.625       0.005  0.002\nCI.mean.0.95   0.311         1.259          1.303      3.186       0.010  0.005\nvar          104.994      1725.368       1848.647  11050.895       0.107  0.023\nstd.dev       10.247        41.538         42.996    105.123       0.328  0.151\ncoef.var       0.681         1.006          0.927      0.680       0.555  1.259\nskewness       0.753         1.914          1.666      0.631      -0.366  1.674\nskew.2SE       9.945        25.285         22.003      8.341      -4.832 22.115\nkurtosis      -0.042         4.250          3.147     -0.537      -1.094  3.061\nkurt.2SE      -0.279        28.079         20.790     -3.545      -7.226 20.226\nnormtest.W     0.942         0.800          0.837      0.943       0.919  0.792\nnormtest.p     0.000         0.000          0.000      0.000       0.000  0.000\n                  os\nmedian         0.754\nmean           0.586\nSE.mean        0.006\nCI.mean.0.95   0.013\nvar            0.173\nstd.dev        0.416\ncoef.var       0.710\nskewness      -0.388\nskew.2SE      -5.124\nkurtosis      -1.586\nkurt.2SE     -10.481\nnormtest.W     0.791\nnormtest.p     0.000\n```\n:::\n\n```{.r .cell-code}\n# empfohlener Weg\n\nggplot(DF_mod_day, aes(slope)) + geom_histogram(aes(y=..density..), color = \"black\", \n                                                fill = \"white\") + \n  stat_function(fun = dnorm, args = list(mean = mean(DF_mod_day$slope, na.rm = T), \n                                         sd = sd(DF_mod_day$slope, na.rm = T)), \n                color = \"black\",size = 1)\n```\n\n::: {.cell-output-display}\n![](4_Multivariate_Modelle_Loesung_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Aufgabe 4: die Korrelation bei einem Teildatensatz testen reicht, \n# denn die verwendeten Kreise sind die selben am Tag und in der Nacht, \n# nur die Nutzung durch das Reh nicht\n```\n:::\n\n\n### Aufgabe 5: Explorative Analysen der Variablen mit Scatterplots, Scatterplotmatrizen\n\n1. Zu Scatterplots und Scatterplotmatrizen gibt es viele verschiedene Funktionen / Packages, schaut im Internet und sucht euch eines welches euch passt.\n2. Testen der Korrelation zwischen den Variablen (Parametrisch oder nicht-parametrische Methode? Ausserdem: gewisse Scatterplotmatrizen zeigen euch die Koeffizenten direkt an)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchart.Correlation(DF_mod_day[6:12], histogram=TRUE, pch=19, method = \"kendall\")\n```\n\n::: {.cell-output-display}\n![](4_Multivariate_Modelle_Loesung_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#?chart.Correlation\n\npairs.panels(DF_mod_day[6:12], \n             method = \"kendall\", # correlation method\n             hist.col = \"#00AFBB\",\n             density = TRUE,  # show density plots\n             ellipses = TRUE # show correlation ellipses\n             )\n```\n\n::: {.cell-output-display}\n![](4_Multivariate_Modelle_Loesung_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Aufgabe 5: die Korrelation bei einem Teildatensatz testen reicht, \n# denn die verwendeten Kreise sind die selben am Tag und in der Nacht, \n# nur die Nutzung durch das Reh nicht.\n```\n:::",
    "supporting": [
      "4_Multivariate_Modelle_Loesung_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}