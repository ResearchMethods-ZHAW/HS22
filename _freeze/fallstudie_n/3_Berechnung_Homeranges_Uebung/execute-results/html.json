{
  "hash": "bff45fe566855c572ad8fe8b8cba69fc",
  "result": {
    "markdown": "---\nexecute:\n  echo: true\n---\n\n\n# 3. Aufgabe 3 Berechnung Homeranges - Übung\n\n## Berechung der Home-Ranges der Rehe \n\n### Libraries laden\n\n\n::: {.cell}\n\n```{.r .cell-code}\nipak <- function(pkg){\nnew.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\nif (length(new.pkg))\ninstall.packages(new.pkg, dependencies = TRUE)\nsapply(pkg, require, character.only = TRUE)\n}\npackages <- c(\"sf\", \"raster\", \"tidyverse\", \"adehabitatHR\", \"maptools\", \"sp\", \n              \"ggspatial\", \"rgeos\", \"rgdal\")\nipak(packages)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          sf       raster    tidyverse adehabitatHR     maptools           sp \n        TRUE         TRUE         TRUE         TRUE         TRUE         TRUE \n   ggspatial        rgeos        rgdal \n        TRUE         TRUE         TRUE \n```\n:::\n:::\n\n\n### Daten einlesen\n\nEinlesen des Gesamtdatensatzes von Moodle, Sichtung des Datensatzes und der Datentypen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRehe <- read_delim(\"fallstudie_n/data/Aufgabe3_Homeranges_Rehe_landforst_20221024.csv\", delim = \";\")\n\nstr(Rehe)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspec_tbl_df [1,452 × 23] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ TierID         : chr [1:1452] \"RE10\" \"RE10\" \"RE10\" \"RE10\" ...\n $ CollarID       : num [1:1452] 13573 13573 13573 13573 13573 ...\n $ UTC_Date       : chr [1:1452] \"31.05.2014\" \"01.06.2014\" \"01.06.2014\" \"01.06.2014\" ...\n $ UTC_Time       : 'hms' num [1:1452] 23:00:44 02:01:02 05:00:44 08:00:43 ...\n  ..- attr(*, \"units\")= chr \"secs\"\n $ LMT_Date       : chr [1:1452] \"01.06.2014\" \"01.06.2014\" \"01.06.2014\" \"01.06.2014\" ...\n $ LMT_Time       : 'hms' num [1:1452] 00:00:44 03:01:02 06:00:44 09:00:43 ...\n  ..- attr(*, \"units\")= chr \"secs\"\n $ Latitude       : num [1:1452] 47.3 47.3 47.3 47.3 47.3 ...\n $ Longitude      : num [1:1452] 8.57 8.57 8.57 8.57 8.57 ...\n $ Height         : num [1:1452] 672 669 689 668 647 ...\n $ DOP            : num [1:1452] 1.8 3.8 3.4 3.2 3.2 1.6 2.4 6.4 2.8 3 ...\n $ X              : num [1:1452] 685838 685842 685877 685827 685763 ...\n $ Y              : num [1:1452] 234281 234287 234300 234281 234264 ...\n $ twilight_start : chr [1:1452] \"31.05.2014 03:55\" \"01.06.2014 03:54\" \"01.06.2014 03:54\" \"01.06.2014 03:54\" ...\n $ sunrise        : chr [1:1452] \"31.05.2014 04:34\" \"01.06.2014 04:33\" \"01.06.2014 04:33\" \"01.06.2014 04:33\" ...\n $ sunset         : chr [1:1452] \"31.05.2014 20:13\" \"01.06.2014 20:14\" \"01.06.2014 20:14\" \"01.06.2014 20:14\" ...\n $ twilight_end   : chr [1:1452] \"31.05.2014 20:51\" \"01.06.2014 20:53\" \"01.06.2014 20:53\" \"01.06.2014 20:53\" ...\n $ moonilumination: num [1:1452] 0.0667 0.1291 0.1291 0.1291 0.1291 ...\n $ daytime        : chr [1:1452] \"N\" \"N\" \"T\" \"T\" ...\n $ ActMean        : num [1:1452] 55.5 42 74 63.7 68 ...\n $ Trajectory     : chr [1:1452] \"RE10\" \"RE10\" \"RE10\" \"RE10\" ...\n $ distance       : num [1:1452] 7.21 37.34 53.49 66.22 92.59 ...\n $ speed          : num [1:1452] 0.000667 0.003463 0.004953 0.006131 0.008574 ...\n $ timelag        : num [1:1452] 10818 10782 10799 10801 10799 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   TierID = col_character(),\n  ..   CollarID = col_double(),\n  ..   UTC_Date = col_character(),\n  ..   UTC_Time = col_time(format = \"\"),\n  ..   LMT_Date = col_character(),\n  ..   LMT_Time = col_time(format = \"\"),\n  ..   Latitude = col_double(),\n  ..   Longitude = col_double(),\n  ..   Height = col_double(),\n  ..   DOP = col_double(),\n  ..   X = col_double(),\n  ..   Y = col_double(),\n  ..   twilight_start = col_character(),\n  ..   sunrise = col_character(),\n  ..   sunset = col_character(),\n  ..   twilight_end = col_character(),\n  ..   moonilumination = col_double(),\n  ..   daytime = col_character(),\n  ..   ActMean = col_double(),\n  ..   Trajectory = col_character(),\n  ..   distance = col_double(),\n  ..   speed = col_double(),\n  ..   timelag = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n\n### Aufgabe 1\n\nIm Datensatz Rehe eine neue Spalte mit Datum und Zeit in einer Spalte kreieren. Beim Format hat sich ein Fehler eingeschlichen. Findet ihr ihn?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRehe <- Rehe %>%\n  mutate(UTC_DateTime = as.POSIXct(paste(UTC_Date, UTC_Time), \n                                   format = \"%Y-%m-%d %H:%M:%S\"))\n```\n:::\n\n\nHier einige Zeilen Code, um eine HomeRange zu berechnen.\n\n### Aufgabe 2\n\nHerumschrauben an den Einstellungen von: \n\n- href (in der Funktion kernelUD)\n- an der Ausdehung, resp. prozentualer Anteil Punkte in der HR (Funktion getverticeshr) \n\n**--> Ziel: eine Karte erstellen mit der Visualiserung mindestens einer HR**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- Rehe$X[Rehe$TierID== \"RE13\"]    \ny <- Rehe$Y[Rehe$TierID== \"RE13\"]\nxy <- data.frame(cbind (x, y, rep(1, length(x))))       \ncoordinates(xy)<-c(\"x\",\"y\")                             \nproj4string(xy)<-CRS(\"+init=epsg:21781\")  \n\nplot(xy, col = \"blue\", pch = 19, cex = 1.5)\n```\n\n::: {.cell-output-display}\n![](3_Berechnung_Homeranges_Uebung_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Berechnung von href nach: Pebsworth et al. (2012) Evaluating home range techniques: \n# use of Global Positioning System (GPS) collar data from chacma baboons\n\nsigma <- 0.5*(sd(x)+sd(y))                              \nn <- length(x)\nhref <- sigma * n^(-1/6)*0.9  \n\n# scaled reference: href * 0.9\n\nkud <- kernelUD(xy, h=href, grid=25)             \n\n# Berechnung der Home Range (95% Isopleth)\n\nhomerange <- getverticeshr(kud, percent=95)             \n\n# Schreibt HR in den oben beschriebenen Ordner (als Shapefile)\n\nhr <- st_as_sf(homerange)\n\nst_write(hr, dsn= \"Results\", layer=\"HR_RE13\", driver=\"ESRI Shapefile\",  \n         delete_layer = T )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDeleting layer `HR_RE13' using driver `ESRI Shapefile'\nWriting layer `HR_RE13' to data source `Results' using driver `ESRI Shapefile'\nWriting 1 features with 2 fields and geometry type Polygon.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mit diesem Befehl kann die HR geplottet werden\n\nggplot(hr, aes(color = \"red\", fill=\"red\")) + \n  geom_sf(size = 1, alpha = 0.3) +\ncoord_sf(datum = sf::st_crs(21781))+\ntheme(\naxis.title = element_blank(),\naxis.text = element_blank(),\naxis.ticks = element_blank(),\nlegend.position=\"none\"\n)\n```\n\n::: {.cell-output-display}\n![](3_Berechnung_Homeranges_Uebung_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# und die Punkte der GPS-Lokalisationen darüber gelegt werden \n\nxy_p <- st_as_sf(xy)\n\nggplot(hr, aes(color = \"red\", fill=\"red\")) + \n  geom_sf(size = 1, alpha = 0.3) +\ngeom_sf(data = xy_p, aes(fill = \"red\")) +\ncoord_sf(datum = sf::st_crs(21781))+\ntheme(\naxis.title = element_blank(),\naxis.text = element_blank(),\naxis.ticks = element_blank(),\nlegend.position=\"none\"\n)\n```\n\n::: {.cell-output-display}\n![](3_Berechnung_Homeranges_Uebung_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\nCode um die Homerange auf der Landeskarte 1:25000 zu plotten. Transparenz kann mit alpha angepasst werden.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npk25_wpz <- brick(\"fallstudie_n/data/pk25_wpz.tif\")\n\nxy_p <- st_as_sf(xy)\n\nggplot(hr, aes(color = \"red\", fill=\"red\")) +\nannotation_spatial(pk25_wpz) +\ngeom_sf(size = 1, alpha = 0.3) +\ngeom_sf(data = xy_p, aes(fill = \"red\")) +\ncoord_sf(datum = sf::st_crs(21781))+\ntheme(\naxis.title = element_blank(),\naxis.text = element_blank(),\naxis.ticks = element_blank(),\nlegend.position=\"none\"\n)\n```\n\n::: {.cell-output-display}\n![](3_Berechnung_Homeranges_Uebung_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nNachbauen des Sampling Grids mit den Kreisen (Wird als Grundlage für Extraktion der Umweltvariablen innerhalb der Homeranges benötigt)\n\n- Xmin bzw. Ymin des Grids: c(684000, 234000)\n- cellsize des Grids: c(25, 25)\n- Anzahl Kreise in X und Y Richtung: c(100, 160)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx25       <- GridTopology(c(684000, 234000), c(25, 25), c(100, 160)) \ndata25    = data.frame(1:(100*160))           \n# Erstellt aus der GridTopology und den Daten ein SpatialGridDataFrame\ngrid25    <- SpatialGridDataFrame(x25, data25,  proj4string <- CRS(\"+init=epsg:21781\"))\npixel25   <- as(grid25, \"SpatialPixelsDataFrame\")\n\n# zweites Sampling Grid für einen Ausschnitt aufbauen, plotten\n# -> dient nur der Visualisierung des Sampling Grids um einen Eindruck zu erhalten\n\nx       <- GridTopology(c(684200, 236900), c(25, 25), c(35, 35)) \ndata    = data.frame(1:(35*35))           \n# Erstellt aus der GridTopology und den Daten ein SpatialGridDataFrame\ngrid    <- SpatialGridDataFrame(x, data,  proj4string <- CRS(\"+init=epsg:21781\"))\npixel  <- as(grid, \"SpatialPixelsDataFrame\")\n\npoints <- as(pixel, \"SpatialPointsDataFrame\")\n\ngrid_plot <- st_buffer(st_as_sf(points), 12.5)\n\nplot(st_geometry(grid_plot))\n```\n\n::: {.cell-output-display}\n![](3_Berechnung_Homeranges_Uebung_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(grid_plot, color = \"black\", fill=NA) + \n  geom_sf() +\ngeom_sf(data = xy_p, color = \"blue\",  ) +\n  geom_sf(data = hr, color = \"red\", fill = NA, size = 2) +\ncoord_sf(datum = sf::st_crs(21781))+\ntheme(\naxis.title = element_blank(),\naxis.text = element_blank(),\naxis.ticks = element_blank(),\nlegend.position=\"none\"\n)\n```\n\n::: {.cell-output-display}\n![](3_Berechnung_Homeranges_Uebung_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n### Aufgabe 3\n\nTesten der Variablen der Vegetationsschichten von letzter Woche auf einen linearen Zusammenhang (Korrelation; Funktion cor.test). DG_Baumschicht vs. DG_os / DG_Strauchschicht vs. DG_us aus dem Datensatz df_with_lidar den wir letzte Woche erstellt haben\n\n**Die Theorie zu Korrelation folgt erst ab 31.10.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| echo: false\n\ndf_with_lidar <- read_delim(\"fallstudie_n/data/df_with_lidar.csv\", delim =\";\")\n\ncor.test(~ DG_Strauchschicht+DG_us, data = df_with_lidar, method=\"pearson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  DG_Strauchschicht and DG_us\nt = 2.6184, df = 148, p-value = 0.009753\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.05190297 0.35858387\nsample estimates:\n      cor \n0.2104143 \n```\n:::\n:::\n",
    "supporting": [
      "3_Berechnung_Homeranges_Uebung_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}