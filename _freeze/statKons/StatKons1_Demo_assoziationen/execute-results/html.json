{
  "hash": "0a7d543f0158c48ca7d7d124090b6409",
  "result": {
    "markdown": "---\ndate: 2022-11-14\nlesson: StatKons1\nthema: Statistik Grundlagen\nindex: 1\n---\n\n\n# StatKons1: Demo 1\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\nError in parse_block(g[-1], g[1], params.src, markdown_mode): Duplicate chunk label 'fig-baseplot-mosaic-plots-mtcars-example', which has been used for the chunk:\n#lade Daten\n# mehr Info darüber: https://cran.r-project.org/web/packages/explore/vignettes/explore_mtcars.html\ncars <- mtcars\n\n#neue kategoriale variable\ncars %<>% \n  as_tibble() %>% # da \"nur\" data frame kann glimplse nichts damit anfangen \n  mutate(vs_cat = if_else(.$vs == 0, \"normal\", \"v-type\")) %>% \n  mutate(am_cat = if_else(am == 0, \"automatic\", \"manual\"))\n\n# betrachte die Daten\nsummary(cars)\nglimpse(cars)\n\n#Assoziation zwischen Anzahl Zylinder und Motorentyp ()\ntable(cars$vs_cat, cars$am_cat) # Achtung: sieht aus, als gäbe es weniger V-Motoren bei den handgeschalteten Autos\n\n#lass und das überprüfen\n#achtung: bei chi-square test kommt es sehr auf das format drauf an (er erwartet entweder vektoren oder eine matrix!)\n\n#exkurs um in es in ein matrix form zu bringen\nchi_sq_matrix <- xtabs(~ vs_cat + am_cat, data = as.data.frame(cars)) # in diesem Spezialfall haben wir keine Kriteriumsvariable\n\n#1.version\nchi_sq <-chisq.test(chi_sq_matrix)\n\n#2. version\nchi_sq <- chisq.test(cars$am_cat, cars$vs_cat)\n\n#resp. fisher exacter test verwenden, da 2x2 table\nfisher.test(chi_sq_matrix)\n\n#fisher exakter test\nfisher.test(cars$am_cat, cars$vs_cat)\n\n#visualisieren: kudos goes to https://mgimond.github.io/Stats-in-R/ChiSquare_test.html#3_two_factor_classification\nOP <- par(mfrow=c(1,2), \"mar\"=c(1,1,3,1))\nmosaicplot(chi_sq$observed, cex.axis =1 , main = \"Observed counts\")\nmosaicplot(chi_sq$expected, cex.axis =1 , main = \"Expected counts\\n(if class had no influence)\")\npar(OP)\n```\n:::\n:::\n\n\n- Download [R-Skript](../purl/StatKons1_Demo_assoziationen.R)\n\n## Grundlagen\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lade Packages\n\nlibrary(tidyverse)\n\n#mytheme\nmytheme <- \n  theme_classic() + \n  theme(\n    axis.line = element_line(color = \"black\"), \n    axis.text = element_text(size = 20, color = \"black\"), \n    axis.title = element_text(size = 20, color = \"black\"), \n    axis.ticks = element_line(size = 1, color = \"black\"), \n    axis.ticks.length = unit(.5, \"cm\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#lade Daten\n# mehr Info darüber: https://cran.r-project.org/web/packages/explore/vignettes/explore_mtcars.html\ncars <- mtcars\n\n#neue kategoriale variable\ncars %<>% \n  as_tibble() %>% # da \"nur\" data frame kann glimplse nichts damit anfangen \n  mutate(vs_cat = if_else(.$vs == 0, \"normal\", \"v-type\")) %>% \n  mutate(am_cat = if_else(am == 0, \"automatic\", \"manual\"))\n\n# betrachte die Daten\nsummary(cars)\nglimpse(cars)\n\n#Assoziation zwischen Anzahl Zylinder und Motorentyp ()\ntable(cars$vs_cat, cars$am_cat) # Achtung: sieht aus, als gäbe es weniger V-Motoren bei den handgeschalteten Autos\n\n#lass und das überprüfen\n#achtung: bei chi-square test kommt es sehr auf das format drauf an (er erwartet entweder vektoren oder eine matrix!)\n\n#exkurs um in es in ein matrix form zu bringen\nchi_sq_matrix <- xtabs(~ vs_cat + am_cat, data = as.data.frame(cars)) # in diesem Spezialfall haben wir keine Kriteriumsvariable\n\n#1.version\nchi_sq <-chisq.test(chi_sq_matrix)\n\n#2. version\nchi_sq <- chisq.test(cars$am_cat, cars$vs_cat)\n\n#resp. fisher exacter test verwenden, da 2x2 table\nfisher.test(chi_sq_matrix)\n\n#fisher exakter test\nfisher.test(cars$am_cat, cars$vs_cat)\n\n#visualisieren: kudos goes to https://mgimond.github.io/Stats-in-R/ChiSquare_test.html#3_two_factor_classification\nOP <- par(mfrow=c(1,2), \"mar\"=c(1,1,3,1))\nmosaicplot(chi_sq$observed, cex.axis =1 , main = \"Observed counts\")\nmosaicplot(chi_sq$expected, cex.axis =1 , main = \"Expected counts\\n(if class had no influence)\")\npar(OP)\n```\n\n::: {.cell-output-display}\n![Generierter Plot](StatKons1_Demo_assoziationen_files/figure-html/fig-baseplot-mosaic-plots-mtcars-example-1.png){#fig-baseplot-mosaic-plots-mtcars-example width=672}\n:::\n:::\n\n\n## Möglicher Text für Ergebnisse\n\nDer $\\chi^2$-Test sagt uns, dass das Art des Motors und Art des Fahrwerks statistisch nicht zusammenhängen. Es gibt keine signifikante Unterscheide zwischen den Variablen \"VS\" und \"AM - Transmission\" ($\\chi^2$(1) = 0.348, *p* = 0.556. Der Fisher exacter Test bestätigt diesen Befund.\nDie Odds Ratio (OR) sagt uns hingegen - unter der Prämisse, dass \"normale\" Motoren eher mit automatischen und V-Motoren eher mit handgeschalteten Fahrwerken ausgestattet sind - dass die Chance doppelt so hoch ist, dass ein Auto mit \"normalem\" Motor automatisch geschaltet ist, als dies bei einem Auto mit V-Motor der Fall wäre\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define dataset\ncars <- mtcars\n\n#neue kategoriale variable\ncars %<>% \n  as_tibble() %>% # da \"nur\" data frame kann glimplse nichts damit anfangen \n  mutate(vs_cat = if_else(.$vs == 0, \"normal\", \"v-type\")) %>% \n  mutate(am_cat = if_else(am == 0, \"automatic\", \"manual\"))\n\n# bei t-Test immer zuerst visualisieren: in diesem Fall Boxplot mit Variablen Getriebe (v- vs. s-motor) und Anzahl Pferdestärke\nggplot2::ggplot(cars, aes(y = hp, x = vs_cat)) +\n  stat_boxplot(geom ='errorbar', width = .25) +\n  geom_boxplot() +\n  # geom_violin()+\n  labs(x = \"\\nBauform Motor\", y = \"Pferdestärke (PS)\\n\") +\n  mytheme\n  \n#alternativ     \nboxplot(cars$hp ~ cars$vs_cat) # sieht ganz ok aus, jedoch weist die variable \"normale Motoren\" deutlich eine grössere Streuung aus -> siehe aov.1 und deren Modelgüte-Plots\n\n# Definiere Model: t-Test, wobei die AV metrisch (in unserem Fall eine Zählvariable) sein muss\nttest <- t.test(cars$hp ~ cars$vs_cat)\naov.1 <- aov(cars$hp ~ cars$vs_cat)\n\n#schaue Modellgüte an\npar(mfrow = c(2,2))\nplot(aov.1)\n\n#zeige resultate\nttest\nsummary.lm(aov.1)\n\n#wie würdet ihr nun die Ergebnisse darstellen?\n```\n\n::: {.cell-output-display}\n![Generierter Plot](StatKons1_Demo_assoziationen_files/figure-html/fig-ggplot-mtcars-example-1.png){#fig-ggplot-mtcars-example-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](StatKons1_Demo_assoziationen_files/figure-html/fig-ggplot-mtcars-example-2.png){#fig-ggplot-mtcars-example-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](StatKons1_Demo_assoziationen_files/figure-html/fig-ggplot-mtcars-example-3.png){#fig-ggplot-mtcars-example-3 width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# für mehr infos here: https://cran.r-project.org/web/packages/datasauRus/vignettes/Datasaurus.html\n\nlibrary(datasauRus)\nif(requireNamespace(\"dplyr\")){\n  suppressPackageStartupMessages(library(dplyr))\n  dt <- datasaurus_dozen %>% \n    group_by(dataset) %>% \n    summarize(\n      mean_x    = mean(x),\n      mean_y    = mean(y),\n      std_dev_x = sd(x),\n      std_dev_y = sd(y),\n      corr_x_y  = cor(x, y)\n    )\n}\n\n# check data structure\nglimpse(dt)\n\n# plot two examples  \nif(requireNamespace(\"ggplot2\")){\n  library(ggplot2)\n  \n  dt = filter(datasaurus_dozen, dataset == \"dino\" | dataset == \"slant_up\")\n  \n  ggplot(dt, aes(x=x, y=y, colour=dataset))+\n    geom_point()+\n    theme_bw() +\n    theme(legend.position = \"none\") +\n    facet_wrap(~dataset) +\n    geom_smooth(method = \"lm\", se = FALSE)\n  \n}\n```\n:::\n",
    "supporting": [
      "StatKons1_Demo_assoziationen_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}