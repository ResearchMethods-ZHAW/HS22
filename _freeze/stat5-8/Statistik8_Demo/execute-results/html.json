{
  "hash": "9a48951404e163e4f79e98e1a6b21497",
  "result": {
    "markdown": "---\ndate: 2022-11-22\nlesson: Stat8\nthema: Clusteranalysen\nindex: 1\nformat:\n  html:\n    code-tools:\n      source: true\n---\n\n\n# Stat8: Demo\n\n- Download dieses Demoscripts via \"\\</\\>Code\" (oben rechts)\n- Datensatz [Doubs.RData](https://moodle.zhaw.ch/mod/resource/view.php?id=606667)\n- Funktion drawmap.R [drawmap.R](drawmap.R)\n- Funktion hcoplot.R [hcoplot.R](hcoplot.R)\n\n## k-means clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# das Moordatenset aus Wildi...\nif(!require(dave)){install.packages(\"dave\")}\nlibrary(dave)\npca <- rda(sveg^0.25, scale = TRUE)\nca <- cca(sveg^0.5)\n\nkmeans.1 <- kmeans(sveg, 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkmeans.1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ca, type = \"n\")\npoints(ca, display = \"sites\", col = kmeans.1[[1]])\n\nkmeans.2 <- kmeans(sveg, 3)\nplot(pca, type = \"n\")\npoints(pca, display = \"sites\", pch=19, col = kmeans.2[[1]])\n\nplot(pca, choices = c(1, 3), type = \"n\")\npoints(pca, choices = c(1, 3), display = \"sites\", pch = 19, col=kmeans.2[[1]])\n\n# k-means partitioning, 2 to 10 groups\nKM.cascade <- cascadeKM(sveg,  inf.gr = 2, sup.gr = 10, iter = 100, criterion = \"ssi\")\nsummary(KM.cascade)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          Length Class  Mode     \npartition 567    -none- numeric  \nresults    18    -none- numeric  \ncriterion   1    -none- character\nsize       90    -none- numeric  \n```\n:::\n\n```{.r .cell-code}\nKM.cascade$results\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      2 groups     3 groups     4 groups     5 groups     6 groups     7 groups\nSSE 1840.13571 1629.4399038 1488.2961538 1378.3369048 1286.5005411 1214.3219697\nssi    0.26103    0.2757656    0.3460776    0.3062468    0.3953415    0.4625321\n        8 groups     9 groups    10 groups\nSSE 1156.7314935 1101.5523810 1053.1476190\nssi    0.4306329    0.5171075    0.4503257\n```\n:::\n\n```{.r .cell-code}\nKM.cascade$partition\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    2 groups 3 groups 4 groups 5 groups 6 groups 7 groups 8 groups 9 groups\n501        1        2        1        5        5        1        1        3\n502        1        2        3        4        6        7        4        6\n503        1        2        1        5        5        1        1        3\n504        1        2        1        5        5        1        1        3\n505        1        2        3        4        6        7        4        6\n506        1        2        1        5        6        7        4        6\n507        1        2        1        5        5        1        1        3\n508        1        2        1        5        5        1        1        3\n509        1        2        1        5        5        1        1        3\n510        1        2        3        4        4        3        6        8\n511        1        2        1        5        5        1        1        3\n512        1        2        3        4        6        7        4        6\n513        1        2        3        4        4        3        6        4\n514        1        2        3        4        6        7        4        6\n515        1        2        3        4        6        7        4        6\n516        1        2        3        4        6        7        4        6\n517        1        2        3        4        4        3        6        8\n518        2        3        4        2        3        4        8        5\n519        1        2        3        4        6        7        4        6\n520        1        2        3        4        4        3        6        8\n521        1        2        1        5        5        1        1        8\n522        1        2        3        4        6        7        4        6\n523        2        3        4        2        3        4        8        5\n524        1        2        1        5        5        1        1        8\n525        1        2        1        5        5        1        1        8\n526        2        1        2        2        3        4        8        5\n527        1        2        3        4        4        3        6        4\n528        1        2        3        4        4        3        6        4\n529        1        2        3        4        4        3        6        4\n530        1        2        3        4        4        3        6        8\n531        2        3        4        1        2        6        3        9\n532        1        2        3        4        4        3        6        4\n533        1        2        3        4        4        3        6        8\n534        1        3        4        1        2        6        3        9\n535        2        3        4        1        2        6        3        9\n536        1        2        3        4        4        3        6        4\n537        1        2        3        4        4        3        6        4\n538        2        3        4        2        3        4        8        5\n539        2        1        2        3        1        2        7        7\n540        1        2        1        5        5        1        1        3\n541        2        1        2        3        1        2        5        2\n542        2        1        2        3        1        2        7        7\n543        2        1        2        3        1        2        5        2\n544        1        3        4        1        2        6        3        9\n545        2        3        4        2        3        4        8        5\n546        2        3        4        1        2        6        3        9\n547        1        3        4        1        2        6        3        4\n548        2        1        2        3        1        2        5        2\n549        2        3        4        1        2        6        3        9\n550        2        3        4        1        2        6        3        9\n551        2        1        2        2        3        5        2        1\n552        2        1        2        3        1        2        5        2\n553        2        1        2        3        1        2        2        1\n554        2        1        2        2        3        5        2        1\n555        2        1        2        2        3        5        2        1\n556        2        1        2        3        1        2        5        2\n557        2        1        2        2        3        5        2        1\n558        2        1        2        2        3        5        2        1\n559        2        1        2        2        3        4        8        5\n560        2        1        2        2        3        4        8        5\n561        2        3        4        2        3        4        8        5\n562        2        1        2        3        1        2        7        7\n563        2        1        2        2        3        5        2        1\n    10 groups\n501         2\n502         4\n503         2\n504         2\n505         4\n506         4\n507         2\n508         2\n509         2\n510         9\n511         1\n512         4\n513         5\n514         4\n515         4\n516         4\n517         9\n518         1\n519         4\n520         9\n521         9\n522         4\n523         8\n524         9\n525         9\n526         8\n527         5\n528         5\n529         5\n530         9\n531         7\n532         5\n533         9\n534         7\n535         7\n536         5\n537         5\n538         1\n539         6\n540         2\n541        10\n542         6\n543        10\n544         7\n545         8\n546         7\n547         5\n548        10\n549         7\n550         7\n551         3\n552        10\n553         3\n554         3\n555         3\n556        10\n557         3\n558         3\n559         8\n560         8\n561         8\n562         6\n563         3\n```\n:::\n\n```{.r .cell-code}\n# k-means visualisation\nplot(KM.cascade, sortg = TRUE)\n```\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-k-means-1.png){#fig-baseplot-k-means-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-k-means-2.png){#fig-baseplot-k-means-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-k-means-3.png){#fig-baseplot-k-means-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-k-means-4.png){#fig-baseplot-k-means-4 width=672}\n:::\n:::\n\n\n## Agglomarative Clusteranalyse\nmit Daten und Skripten aus Borcard et al. (2018)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"datasets/statistik/Doubs.RData\")  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove empty site 8\nspe <- spe[-8, ]\nenv <- env[-8, ]\nspa <- spa[-8, ]\nlatlong <- latlong[-8, ]\n```\n:::\n\n\n## Dendogramme berechnen und ploten\n\n::: {.cell}\n\n```{.r .cell-code}\n## Hierarchical agglomerative clustering of the species abundance \n\n# Compute matrix of chord distance among sites\nspe.norm <- decostand(spe, \"normalize\")\nspe.ch <- vegdist(spe.norm, \"euc\")\n\n# Attach site names to object of class 'dist'\nattr(spe.ch, \"Labels\") <- rownames(spe)\n\npar(mfrow = c(1, 1))\n\n# Compute single linkage agglomerative clustering\nspe.ch.single <- hclust(spe.ch, method = \"single\")\n# Plot a dendrogram using the default options\nplot(spe.ch.single, labels = rownames(spe), main = \"Chord - Single linkage\")\n\n# Compute complete-linkage agglomerative clustering\nspe.ch.complete <- hclust(spe.ch, method = \"complete\")\nplot(spe.ch.complete, labels = rownames(spe), main = \"Chord - Complete linkage\")\n\n# Compute UPGMA agglomerative clustering\nspe.ch.UPGMA <- hclust(spe.ch, method = \"average\")\nplot(spe.ch.UPGMA, labels = rownames(spe), main = \"Chord - UPGMA\")\n\n# Compute centroid clustering\nspe.ch.centroid <- hclust(spe.ch, method = \"centroid\")\nplot(spe.ch.centroid, labels = rownames(spe),  main = \"Chord - Centroid\")\n\n# Compute Ward's minimum variance clustering\nspe.ch.ward <-hclust(spe.ch, method = \"ward.D2\")\nplot(spe.ch.ward, labels = rownames(spe),  main = \"Chord - Ward\")\n\n# Compute beta-flexible clustering using cluster::agnes()\n# beta = -0.1\nspe.ch.beta1 <- agnes(spe.ch, method = \"flexible\", par.method = 0.55)\n# beta = -0.25\nspe.ch.beta2 <- agnes(spe.ch, method = \"flexible\", par.method = 0.625)\n# beta = -0.5\nspe.ch.beta3 <- agnes(spe.ch, method = \"flexible\", par.method = 0.75)\n# Change the class of agnes objects\nclass(spe.ch.beta1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"agnes\" \"twins\"\n```\n:::\n\n```{.r .cell-code}\nspe.ch.beta1 <- as.hclust(spe.ch.beta1)\nclass(spe.ch.beta1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"hclust\"\n```\n:::\n\n```{.r .cell-code}\nspe.ch.beta2 <- as.hclust(spe.ch.beta2)\nspe.ch.beta3 <- as.hclust(spe.ch.beta3)\n\npar(mfrow = c(2, 2))\nplot(spe.ch.beta1, labels = rownames(spe), main = \"Chord - Beta-flexible (beta=-0.1)\")\nplot(spe.ch.beta2, labels = rownames(spe), main = \"Chord - Beta-flexible (beta=-0.25)\")\nplot(spe.ch.beta3,  labels = rownames(spe),  main = \"Chord - Beta-flexible (beta=-0.5)\")\n\n# Compute Ward's minimum variance clustering\nspe.ch.ward <- hclust(spe.ch, method = \"ward.D2\")\nplot(spe.ch.ward, labels = rownames(spe), main = \"Chord - Ward\")\n```\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-agglomerative-clustering-1.png){#fig-baseplot-agglomerative-clustering-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-agglomerative-clustering-2.png){#fig-baseplot-agglomerative-clustering-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-agglomerative-clustering-3.png){#fig-baseplot-agglomerative-clustering-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-agglomerative-clustering-4.png){#fig-baseplot-agglomerative-clustering-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-agglomerative-clustering-5.png){#fig-baseplot-agglomerative-clustering-5 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-agglomerative-clustering-6.png){#fig-baseplot-agglomerative-clustering-6 width=672}\n:::\n:::\n\n\n## Cophenetic correlations\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Single linkage clustering\nspe.ch.single.coph <- cophenetic(spe.ch.single)\ncor(spe.ch, spe.ch.single.coph)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5015116\n```\n:::\n\n```{.r .cell-code}\n# Complete linkage clustering\nspe.ch.comp.coph <- cophenetic(spe.ch.complete)\ncor(spe.ch, spe.ch.comp.coph)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7567998\n```\n:::\n\n```{.r .cell-code}\n# Average clustering\nspe.ch.UPGMA.coph <- cophenetic(spe.ch.UPGMA)\ncor(spe.ch, spe.ch.UPGMA.coph)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8537529\n```\n:::\n\n```{.r .cell-code}\n# Ward clustering\nspe.ch.ward.coph <- cophenetic(spe.ch.ward)\ncor(spe.ch, spe.ch.ward.coph)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7821555\n```\n:::\n\n```{.r .cell-code}\n# Shepard-like diagrams\npar(mfrow = c(2, 2))\nplot(spe.ch, spe.ch.single.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, sqrt(2)),\n  main = c(\"Single linkage\", paste(\"Cophenetic correlation =\",\n                                   round(cor(spe.ch, spe.ch.single.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.single.coph), col = \"red\")\n\nplot(spe.ch, spe.ch.comp.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, sqrt(2)),\n  main = c(\"Complete linkage\", paste(\"Cophenetic correlation =\",\n                                     round(cor(spe.ch, spe.ch.comp.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.comp.coph), col = \"red\")\n\nplot(spe.ch, spe.ch.UPGMA.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, sqrt(2)),\n  main = c(\"UPGMA\", paste(\"Cophenetic correlation =\",\n                          round( cor(spe.ch, spe.ch.UPGMA.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.UPGMA.coph), col = \"red\")\n\nplot(spe.ch, spe.ch.ward.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, max(spe.ch.ward$height)),\n  main = c(\"Ward\", paste(\"Cophenetic correlation =\", \n                         round(cor(spe.ch, spe.ch.ward.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.ward.coph), col = \"red\")\n```\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-cophenetic-correlations-1.png){#fig-baseplot-cophenetic-correlations width=672}\n:::\n:::\n\n\n## Optimale Anzahl Cluster\n\n::: {.cell}\n\n```{.r .cell-code}\n## Select a dendrogram (Ward/chord) and apply three criteria\n## to choose the optimal number of clusters\n\n# Choose and rename the dendrogram (\"hclust\" object)\nhc <- spe.ch.ward\n# hc <- spe.ch.beta2\n# hc <- spe.ch.complete\n\npar(mfrow = c(1, 2))\n\n# Average silhouette widths (Rousseeuw quality index)\nSi <- numeric(nrow(spe))\nfor (k in 2:(nrow(spe) - 1))\n{\n  sil <- silhouette(cutree(hc, k = k), spe.ch)\n  Si[k] <- summary(sil)$avg.width\n}\n\nk.best <- which.max(Si)\nplot(1:nrow(spe), Si, type = \"h\",\n  main = \"Silhouette-optimal number of clusters\",\n  xlab = \"k (number of clusters)\", ylab = \"Average silhouette width\")\naxis(1, k.best,paste(\"optimum\", k.best, sep = \"\\n\"), col = \"red\", \n     font = 2, col.axis = \"red\")\npoints(k.best,max(Si), pch = 16, col = \"red\",cex = 1.5)\n\n# Optimal number of clusters according to matrix correlation \n# statistic (Pearson)\n\n# Homemade function grpdist from Borcard et al. (2018)\ngrpdist <- function(X)\n{\n  require(cluster)\n  veg <- as.data.frame(as.factor(X))\n  distgr <- daisy(veg, \"gower\")\n  distgr\n} \n\nkt <- data.frame(k = 1:nrow(spe), r = 0)\nfor (i in 2:(nrow(spe) - 1)) \n{\n  gr <- cutree(hc, i)\n  distgr <- grpdist(gr)\n  mt <- cor(spe.ch, distgr, method = \"pearson\")\n  kt[i, 2] <- mt\n}\n\nk.best <- which.max(kt$r)\nplot(kt$k,kt$r, type = \"h\",\n  main = \"Matrix correlation-optimal number of clusters\",\n  xlab = \"k (number of clusters)\", ylab = \"Pearson's correlation\")\naxis(1, k.best, paste(\"optimum\", k.best, sep = \"\\n\"),\n  col = \"red\", font = 2, col.axis = \"red\")\npoints(k.best, max(kt$r), pch = 16, col = \"red\", cex = 1.5)\n\n# Optimal number of clusters according as per indicator species\n# analysis (IndVal, Dufrene-Legendre; package: labdsv)\nIndVal <- numeric(nrow(spe))\nng <- numeric(nrow(spe))\nfor (k in 2:(nrow(spe) - 1))\n{\n  iva <- indval(spe, cutree(hc, k = k), numitr = 1000)\n  gr <- factor(iva$maxcls[iva$pval <= 0.05])\n  ng[k] <- length(levels(gr)) / k\n  iv <- iva$indcls[iva$pval <= 0.05]\n  IndVal[k] <- sum(iv)\n}\n\nk.best <- which.max(IndVal[ng == 1]) + 1\ncol3 <- rep(1, nrow(spe))\ncol3[ng == 1] <- 3\n\npar(mfrow = c(1, 2))\nplot(1:nrow(spe), IndVal, type = \"h\",\n  main = \"IndVal-optimal number of clusters\",\n  xlab = \"k (number of clusters)\", ylab = \"IndVal sum\", col = col3)\naxis(1,k.best,paste(\"optimum\", k.best, sep = \"\\n\"),\n  col = \"red\", font = 2, col.axis = \"red\")\n\npoints(which.max(IndVal),max(IndVal),pch = 16,col = \"red\",cex = 1.5)\ntext(28, 15.7, \"a\", cex = 1.8)\n\nplot(1:nrow(spe),ng,\n  type = \"h\",\n  xlab = \"k (number of clusters)\",\n  ylab = \"Ratio\",\n  main = \"Proportion of clusters with significant indicator species\",\n  col = col3)\naxis(1,k.best,paste(\"optimum\", k.best, sep = \"\\n\"),\n     col = \"red\", font = 2, col.axis = \"red\")\npoints(k.best,max(ng), pch = 16, col = \"red\", cex = 1.5)\ntext(28, 0.98, \"b\", cex = 1.8)\n```\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-hclust-1.png){#fig-baseplot-hclust-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-hclust-2.png){#fig-baseplot-hclust-2 width=672}\n:::\n:::\n\n\n## Final dendrogram with the selected clusters\n\n::: {.cell}\n\n```{.r .cell-code}\n# Choose the number of clusters\nk <- 4\n# Silhouette plot of the final partition\nspech.ward.g <- cutree(spe.ch.ward, k = k)\nsil <- silhouette(spech.ward.g, spe.ch)\nrownames(sil) <- row.names(spe)\n\nplot(sil, main = \"Silhouette plot - Chord - Ward\", cex.names = 0.8, col = 2:(k + 1), nmax = 100)\n\n# Reorder clusters\nif(!require(gclus)){install.packages(\"gclus\")}\nlibrary(\"gclus\")\nspe.chwo <- reorder.hclust(spe.ch.ward, spe.ch)\n\n# Plot reordered dendrogram with group labels\npar(mfrow = c(1, 1))\nplot(spe.chwo, hang = -1, xlab = \"4 groups\", ylab = \"Height\", sub = \"\",\n  main = \"Chord - Ward (reordered)\", labels = cutree(spe.chwo, k = k))\nrect.hclust(spe.chwo, k = k)\n\n# Plot the final dendrogram with group colors (RGBCMY...)\n# Fast method using the additional hcoplot() function:\n# Usage:\n# hcoplot(tree = hclust.object,\n#   diss = dissimilarity.matrix,\n#   lab = object labels (default NULL),\n#   k = nb.clusters,\n#   title = paste(\"Reordered dendrogram from\",deparse(tree$call),\n#   sep=\"\\n\"))\nsource(\"stat5-8/hcoplot.R\")\nhcoplot(spe.ch.ward, spe.ch, lab = rownames(spe), k = 4)\n\n# Plot the Ward clusters on a map of the Doubs River\n# (see Chapter 2)\nsource(\"stat5-8/drawmap.R\")\ndrawmap(xy = spa, clusters = spech.ward.g, main = \"Four Ward clusters along the Doubs River\")\n```\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-dendrogram-final-1.png){#fig-baseplot-dendrogram-final-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-dendrogram-final-2.png){#fig-baseplot-dendrogram-final-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-dendrogram-final-3.png){#fig-baseplot-dendrogram-final-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-dendrogram-final-4.png){#fig-baseplot-dendrogram-final-4 width=672}\n:::\n:::\n\n\n## Miscellaneous graphical outputs\n\n::: {.cell}\n\n```{.r .cell-code}\n# konvertieren von \"hclust\" Objekt in ein Dendogram Objekt\ndend <- as.dendrogram(spe.ch.ward)\n\n# Heat map of the dissimilarity matrix ordered with the dendrogram\nheatmap(as.matrix(spe.ch), Rowv = dend, symm = TRUE, margin = c(3, 3))\n\n# Ordered community table\n# Species are ordered by their weighted averages on site scores.\n# Dots represent absences.\nlibrary(vegan)\nor <- vegemite(spe, spe.chwo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                    \n      32222222222  111111     1111  \n      098762105439598765064732213481\n Icme 5432121.......................\n Abbr 54332431.....1................\n Blbj 54542432.1...1................\n Anan 54432222.....111..............\n Gyce 5555443212...11...............\n Scer 522112221...21................\n Cyca 53421321.....1111.............\n Rham 55432333.....221..............\n Legi 35432322.1...1111.............\n Alal 55555555352..322..............\n Chna 12111322.1...211..............\n Titi 53453444...1321111.21.........\n Ruru 55554555121455221..1..........\n Albi 53111123.....2341.............\n Baba 35342544.....23322.........1..\n Eslu 453423321...41111..12.1....1..\n Gogo 5544355421..242122111......1..\n Pefl 54211432....41321..12.........\n Pato 2211.222.....3344.............\n Sqce 3443242312152132232211..11.1..\n Lele 332213221...52235321.1........\n Babl .1111112...32534554555534124..\n Teso .1...........11254........23..\n Phph .1....11...13334344454544455..\n Cogo ..............1123......2123..\n Satr .1..........2.12341345555355.3\n Thth .1............11.2......2134..\n30 sites, 27 species\n```\n:::\n\n::: {.cell-output-display}\n![Generierter Plot](Statistik8_Demo_files/figure-html/fig-baseplot-dendrogram-heatmap-1.png){#fig-baseplot-dendrogram-heatmap width=672}\n:::\n:::\n",
    "supporting": [
      "Statistik8_Demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}