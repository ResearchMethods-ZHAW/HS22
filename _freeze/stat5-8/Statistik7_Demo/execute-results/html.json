{
  "hash": "270487e2566a3ca67ce92e3cd038e02c",
  "result": {
    "markdown": "---\ntitle: \"Demo\"\nauthor: Jürgen Dengler\nimage: distill-preview.png\nlerneinheit: Statistik7\ndate: 2021-11-22\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\n# Ordinationen II\n\n- [Demoscript als Download](Statistik7_Demo.R)\n- Datensatz [Doubs.RData](https://github.com/ResearchMethods-ZHAW/datasets/raw/main/statistik/Doubs.RData)\n- Funktion [triplot.rda.R](triplot.rda.R)\n\n## Interpretation von Ordinationen\n\nWildi pp. 96 et seq.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot Arten\nif(!require(dave)){install.packages(\"dave\")}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: dave\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: cluster\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: labdsv\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: mgcv\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: nlme\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is mgcv 1.8-40. For overview type 'help(\"mgcv-package\")'.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is labdsv 2.0-1\nconvert existing ordinations with as.dsvord()\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'labdsv'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    density\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: vegan\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: permute\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is vegan 2.6-2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: nnet\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'nnet'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:mgcv':\n\n    multinom\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tree\n```\n:::\n\n```{.r .cell-code}\nlibrary(dave)\nca <- cca(sveg^0.5)\n\n# Plot mit ausgewählten Arten\nsel.spec <- c(3, 11, 23, 31, 39, 46, 72, 77, 96)\nsnames <- names(sveg[,sel.spec])\nsnames\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Vaccinium.oxycoccos\" \"Carex.echinata\"      \"Arnica.montana\"     \n[4] \"Festuca.rubra\"       \"Carex.pulicaris\"     \"Sphagnum.recurvum\"  \n[7] \"Viola.palustris\"     \"Galium.uliginosum\"   \"Stachys.officinalis\"\n```\n:::\n\n```{.r .cell-code}\nscores <- scores(ca, display = \"species\", scaling = \"sites\")\nsx <- scores[sel.spec, 1]\nsy <- scores[sel.spec, 2]\nplot(ca, display = \"sites\", type = \"point\")\npoints(sx, sy, pch = 16)\nsnames <- make.cepnames(snames)\ntext(sx, sy, snames, pos = c(1,2,1,1,3,2,4,3,1), cex = 0.8)\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot \"response surfaces\" in der CA\nplot(ca, display = \"sites\", type = \"point\")\nordisurf(ca, ssit$pH.peat, add = T)\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n4.63  total = 5.63 \n\nREML score: 28.14791     \n```\n:::\n\n```{.r .cell-code}\nplot(ca, display = \"sites\", type = \"points\")\nordisurf(ca, ssit$Waterlev.av, add = T, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n5.07  total = 6.07 \n\nREML score: 161.492     \n```\n:::\n\n```{.r .cell-code}\n# Das gleiche für die DCA\ndca <- decorana(sveg)\nplot(dca, display = \"sites\", type = \"points\")\nordisurf(dca, ssit$pH.peat, add = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n2.61  total = 3.61 \n\nREML score: 29.47878     \n```\n:::\n\n```{.r .cell-code}\nordisurf(dca, ssit$Waterlev.av, add = T, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n6.23  total = 7.23 \n\nREML score: 161.1293     \n```\n:::\n\n```{.r .cell-code}\n# Das gleiche mit NMDS\nmde <- vegdist(sveg, method = \"euclidean\")\nmmds <- metaMDS(mde)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRun 0 stress 0.1478603 \nRun 1 stress 0.1489369 \nRun 2 stress 0.1971352 \nRun 3 stress 0.1766232 \nRun 4 stress 0.1847345 \nRun 5 stress 0.1658979 \nRun 6 stress 0.1602714 \nRun 7 stress 0.1920926 \nRun 8 stress 0.1989544 \nRun 9 stress 0.1471305 \n... New best solution\n... Procrustes: rmse 0.01127961  max resid 0.06926912 \nRun 10 stress 0.1462959 \n... New best solution\n... Procrustes: rmse 0.03006108  max resid 0.1479204 \nRun 11 stress 0.1462959 \n... Procrustes: rmse 5.519458e-05  max resid 0.0003551338 \n... Similar to previous best\nRun 12 stress 0.1735907 \nRun 13 stress 0.1780853 \nRun 14 stress 0.1646404 \nRun 15 stress 0.1478583 \nRun 16 stress 0.1602556 \nRun 17 stress 0.1462959 \n... Procrustes: rmse 2.939996e-05  max resid 0.000189993 \n... Similar to previous best\nRun 18 stress 0.1462959 \n... Procrustes: rmse 1.809903e-05  max resid 0.0001123466 \n... Similar to previous best\nRun 19 stress 0.148944 \nRun 20 stress 0.1761314 \n*** Solution reached\n```\n:::\n\n```{.r .cell-code}\nif(!require(MASS)){install.packages(\"MASS\")}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: MASS\n```\n:::\n\n```{.r .cell-code}\nlibrary(MASS)\nimds <- isoMDS(mde)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninitial  value 21.981028 \niter   5 value 15.595142\niter  10 value 15.269201\nfinal  value 15.229997 \nconverged\n```\n:::\n\n```{.r .cell-code}\nplot(mmds$points)\nordisurf(mmds, ssit$pH.peat, add = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n5.97  total = 6.97 \n\nREML score: 41.99543     \n```\n:::\n\n```{.r .cell-code}\nordisurf(mmds, ssit$Waterlev.av,add = T, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-3-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n6.39  total = 7.39 \n\nREML score: 168.0635     \n```\n:::\n\n```{.r .cell-code}\nplot(imds$points)\nordisurf(imds, ssit$pH.peat, add = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n7.06  total = 8.06 \n\nREML score: 37.68641     \n```\n:::\n\n```{.r .cell-code}\nordisurf(imds, ssit$Waterlev.av, add = T, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-3-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ny ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n\nEstimated degrees of freedom:\n6.01  total = 7.01 \n\nREML score: 167.6801     \n```\n:::\n:::\n\n\n\n## Constrained ordination\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 5 Umweltvariablen gewählt, durch die die Ordination constrained werden soll\nssit\nsummary(ssit)\ns5 <- c(\"pH.peat\", \"P.peat\", \"Waterlev.av\", \"CEC.peat\", \"Acidity.peat\")\nssit5 <- ssit[s5]\n\ndata(sveg)\nsummary(sveg)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# RDA = constrained PCA\nrda <- rda(sveg~., ssit5)\nplot(rda)\n\n# CCA = constrained CA\ncca <- cca(sveg~., ssit5)\nplot(cca)\n\n# Unconstrained and constrained variance\ntot <- cca$tot.chi\nconstr <- cca$CCA$tot.chi\nconstr / tot\n```\n:::\n\n\n## Redundancy analysis (RDA)\n\nMehr Details zu RDA aus Borcard et al. (Numerical ecology with R)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Datensatz Doubs\n# Doubs Datensatz in den workspace laden\nload(here(\"data\",\"Doubs.RData\"))  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(spe)\nsummary(env)\nsummary(spa)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Entfernen der Untersuchungsfläche ohne Arten\nspe <- spe[-8, ]\nenv <- env[-8, ]\nspa <- spa[-8, ]\n\n# Karten für 4 Fischarten\npar(mfrow = c(2, 2))\nplot(spa, asp = 1, col = \"brown\", cex = spe$Satr, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Brown trout\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Thth, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Grayling\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Alal, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Bleak\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Titi, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Tench\")\nlines(spa, col = \"light blue\")\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Set aside the variable 'dfs' (distance from the source) for \n# later use\ndfs <- env[, 1]\n# Remove the 'dfs' variable from the env data frame\nenv2 <- env[, -1]\n\n# Recode the slope variable (slo) into a factor (qualitative) \n# variable to show how these are handled in the ordinations\nslo2 <- rep(\".very_steep\", nrow(env))\nslo2[env$slo <= quantile(env$slo)[4]] <- \".steep\"\nslo2[env$slo <= quantile(env$slo)[3]] <- \".moderate\"\nslo2[env$slo <= quantile(env$slo)[2]] <- \".low\"\nslo2 <- factor(slo2, levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\"))\ntable(slo2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nslo2\n       .low   .moderate      .steep .very_steep \n          8           8           6           7 \n```\n:::\n\n```{.r .cell-code}\n# Create an env3 data frame with slope as a qualitative variable\nenv3 <- env2\nenv3$slo <- slo2\n\n# Create two subsets of explanatory variables\n# Physiography (upstream-downstream gradient)\nenvtopo <- env2[, c(1 : 3)]\nnames(envtopo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"ele\" \"slo\" \"dis\"\n```\n:::\n\n```{.r .cell-code}\n# Water quality\nenvchem <- env2[, c(4 : 10)]\nnames(envchem)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"pH\"  \"har\" \"pho\" \"nit\" \"amm\" \"oxy\" \"bod\"\n```\n:::\n\n```{.r .cell-code}\n# Hellinger-transform the species dataset\nlibrary(vegan)\nspe.hel <- decostand(spe, \"hellinger\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspe.hel\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Redundancy analysis (RDA)\n## RDA of the Hellinger-transformed fish species data, constrained\n## by all the environmental variables contained in env3\nspe.rda <- rda(spe.hel ~ ., env3) # Observe the shortcut formula\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspe.rda\nsummary(spe.rda)\t# Scaling 2 (default)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Canonical coefficients from the rda object\ncoef(spe.rda)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Unadjusted R^2 und Adjusted R^2\n(R2 <- RsquareAdj(spe.rda))\n\n## Triplots of the rda results (lc scores)\n## Site scores as linear combinations of the environmental variables\n# dev.new(title = \"RDA scaling 1 and 2 + lc\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\n# Scaling 1\nplot(spe.rda,scaling = 1, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - lc scores\")\nspe.sc1 <- scores(spe.rda, choices = 1:2, scaling = 1, display = \"sp\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\ntext(-0.75, 0.7, \"a\", cex = 1.5)\n# Scaling 2\nplot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - lc scores\")\nspe.sc2 <- scores(spe.rda, choices = 1:2, display = \"sp\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92,length = 0, lty = 1, col = \"red\")\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n\n\n## Triplots of the rda results (wa scores)\n## Site scores as weighted averages (vegan's default)\n# Scaling 1 :  distance triplot\n#dev.new(title = \"RDA plot\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\nplot(spe.rda, scaling = 1, main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - wa scores\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n# Scaling 2 (default) :  correlation triplot\nplot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n\n# Select species with goodness-of-fit at least 0.6 in the \n# ordination plane formed by axes 1 and 2\nspe.good <- goodness(spe.rda)\nsel.sp <- which(spe.good[, 2] >= 0.6)\nsel.sp\n\n# Triplots with homemade function triplot.rda(), scalings 1 and 2\nsource(\"triplot.rda.R\")\n#dev.new(title = \"RDA plot with triplot.rda\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\ntriplot.rda(spe.rda, site.sc = \"lc\", scaling = 1, cex.char2 = 0.7, pos.env = 3, \n            pos.centr = 1, mult.arrow = 1.1, mar.percent = 0.05, select.spe = sel.sp)\ntext(-0.92, 0.72, \"a\", cex = 2)\ntriplot.rda(spe.rda, site.sc = \"lc\", scaling = 2, cex.char2 = 0.7, pos.env = 3, \n            pos.centr = 1, mult.arrow = 1.1, mar.percent = 0.05, select.spe = sel.sp)\ntext(-2.82, 2, \"b\", cex = 2)\n\n# Global test of the RDA result\nanova(spe.rda, permutations = how(nperm = 999))\n# Tests of all canonical axes\nanova(spe.rda, by = \"axis\", permutations = how(nperm = 999))\n\n## Partial RDA: effect of water chemistry, holding physiography\n## constant\n\n# Simple syntax; X and W may be in separate tables of quantitative \n# variables\n(spechem.physio <- rda(spe.hel, envchem, envtopo))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(spechem.physio)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Formula interface; X and W variables must be in the same \n# data frame\n(spechem.physio2 <- rda(spe.hel ~ pH + har + pho + nit + amm + oxy + bod \n        + Condition(ele + slo + dis), data = env2))\n\n# Test of the partial RDA, using the results with the formula \n# interface to allow the tests of the axes to be run\nanova(spechem.physio2, permutations = how(nperm = 999))\nanova(spechem.physio2, permutations = how(nperm = 999), by = \"axis\")\n\n# Partial RDA triplots (with fitted site scores) \n# with function triplot.rda\n# Scaling 1\n#dev.new(title = \"Partial RDA\",width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\ntriplot.rda(spechem.physio, site.sc = \"lc\", scaling = 1, \n            cex.char2 = 0.8, pos.env = 3, mar.percent = 0)\ntext(-0.58, 0.64, \"a\", cex = 2)\n\n# Scaling 2\ntriplot.rda(spechem.physio, site.sc = \"lc\", scaling = 2, cex.char2 = 0.8, \n            pos.env = 3, mult.spe = 1.1, mar.percent = 0.04)\ntext(-3.34, 3.64, \"b\", cex = 2)\n```\n:::\n\n\n## Variation partioning\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Variation partitioning with two sets of explanatory variables\n\n# Explanation of fraction labels (two, three and four explanatory \n# matrices) with optional colours\npar(mfrow = c(1, 3), mar = c(1, 1, 1, 1))\nshowvarparts(2, bg = c(\"red\", \"blue\"))\nshowvarparts(3, bg = c(\"red\", \"blue\", \"yellow\"))\nshowvarparts(4, bg = c(\"red\", \"blue\", \"yellow\", \"green\"))\n\n## 1. Variation partitioning with all explanatory variables\n##    (except dfs)\n(spe.part.all <- varpart(spe.hel, envchem, envtopo))\n\n# Plot of the partitioning results\npar(mfrow = c(1, 1))\nplot(spe.part.all, digits = 2, bg = c(\"red\", \"blue\"),\n     Xnames = c(\"Chemistry\", \"Physiography\"), \n     id.size = 0.7)\n```\n:::\n",
    "supporting": [
      "Statistik7_Demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}