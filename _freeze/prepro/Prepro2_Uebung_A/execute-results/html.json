{
  "hash": "1be1d8af97c25732260780066e212877",
  "result": {
    "markdown": "---\ndate: 2022-10-17\nlesson: PrePro2\nthema: Piping / Joins\nindex: 2\nexecute: \n  echo: false   # set to true to show musterlösung\n  output: false\ncode-fold: true\ncode-summary: \"Musterlösung\"\n---\n\n\n# Prepro 2: Übung A\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(dplyr)\nlibrary(readr)\nlibrary(lubridate)\n\n# Alternativ kannst du alle tidyverse packages mit library(tidyverse) laden\n```\n:::\n\n\n## Aufgabe 1\n\nLade die Wetterdaten von letzer Woche runter ([weather.csv](https://moodle.zhaw.ch/mod/resource/view.php?id=602135), Quelle MeteoSchweiz) und importiere sie in `R`. Sorge dafür, dass die Spalten korrekt formatiert sind (`stn` als `factor`, `time` als `POSIXct`, `tre200h0` als `numeric`.)\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n## Aufgabe 2\n\nLade [metadata](https://moodle.zhaw.ch/mod/resource/view.php?id=602139) herunter und lese es ebenfalls als csv ein.\n\n:::{.callout-tip collapse=true}\nWenn Umlaute und Sonderzeichen nicht korrekt dargestellt werden (z.B. in Gen*è*ve), hat das vermutlich mit der [Zeichencodierung](https://de.wikipedia.org/wiki/Zeichenkodierung) zu tun. Das File ist aktuell in 'UTF-8' codiert. Diese Codierung muss in R beim Importieren spezifitiert, was je nach verwendete import Funktion unterschiedlich gemacht wird. Die Funktionen aus `readr` verwenden `locale = locale(encoding = \"UTF-8\")`, base-R Funktionen `fileEncoding = \"UTF-8\"`\n\nWenn ihr die codierung eines Files *nicht* kennt, könnt ihr unter Windows vorgehen [wie hier beschrieben](https://stackoverflow.com/a/13464816/4139249). Die Anleitung für Mac ist [hier verfügbar](https://stackoverflow.com/a/2461193/4139249). Linux Nutzer können [diese Anleitung](https://stackoverflow.com/a/805474/4139249) befolgen. \n:::\n\n\n::: {.cell}\n\n:::\n\n\n## Aufgabe 3\n\nNun wollen wir den Datensatz `wetter`mit den Informationen aus `metadata` anreichern. Uns interessiert aber nur das Stationskürzel, der Name, die x/y Koordinaten sowie die Meereshöhe. Lösche die nicht benötigten Spalten (oder selektiere die benötigten Spalten).\n\n\n::: {.cell}\n\n:::\n\n\n## Aufgabe 4\n\nNun ist der Datensatz `metadata` genügend vorbereitet. Jetzt kann er mit dem Datensatz `wetter` verbunden werden. Überlege dir, welcher Join dafür sinnvoll ist und mit welchem Attribut wir \"joinen\" können.\n\nNutze die Join-Möglichkeiten von `dplyr` (Hilfe via `?dplyr::join`)  um die Datensätze `wetter` und `metadata` zu verbinden.\n\n\n::: {.cell}\n\n:::\n\n\n## Aufgabe 5\n\nErstelle eine neue Spalte `month` welche den jeweiligen Monat (aus `time`) beinhaltet. Nutze dafür die Funktion `lubridate::month()`.\n\n\n::: {.cell}\n\n:::\n\n\n## Aufgabe 6\n\nBerechne mit der Spalte `month` die Durchschnittstemperatur pro Monat.\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}