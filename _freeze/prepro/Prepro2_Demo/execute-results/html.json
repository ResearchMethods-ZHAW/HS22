{
  "hash": "cbb577594be463c883066132e1ecc950",
  "result": {
    "markdown": "---\ndate: 2022-10-17\nlesson: PrePro2\nthema: Piping / Joins\nindex: 1\n---\n\n\n# Prepro 2: Demo\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n## Piping\n\nGegeben ist ein character string (`diary`). Wir wollen aus diesem Text die Temperaturangabe aus dem String extrahieren und danach den Wert von Kelvin in Celsius nach der folgenden Formel umwandeln und zum Schluss den Mittelwert über all diese Werte berechnen.\n\n\n$$°C = K - 273.15$$\n\n::: {.cell}\n\n```{.r .cell-code}\ndiary <- c(\n  \"The temperature is 310° Kelvin\",\n  \"The temperature is 322° Kelvin\",\n  \"The temperature is 410° Kelvin\"\n)\n\ndiary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The temperature is 310° Kelvin\" \"The temperature is 322° Kelvin\"\n[3] \"The temperature is 410° Kelvin\"\n```\n:::\n:::\n\n\nDafür haben wir eine Hilfsfunktion `subtrahieren`, welche zwei Werte annimmt, den `minuend` und den `subtrahend`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsubtrahieren <- function(minuend, subtrahend){\n  minuend - subtrahend\n}\n```\n:::\n\n\nZudem brauchen wir die Funktion `substr()`, welche aus einem `character` einen teil \"raus schnipseln\" kann.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Wenn die Buchstaben einzelne _Elemente_ eines Vektors wären, würden wir diese\n# folgendermassen subsetten:\n\ncharvec1 <- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\")\ncharvec1[4:6]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"d\" \"e\" \"f\"\n```\n:::\n\n```{.r .cell-code}\n# Aber wenn diese in einem einzigen character gespeichert sind, brauchen wir substr:\ncharvec2 <- \"abcdefgh\"\nsubstr(charvec2, 4, 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"def\"\n```\n:::\n:::\n\n\nÜbersetzt in `R`-Code entsteht folgende Operation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Nimm diary\n# 2. Extrahiere auf jeder Zeile die Werte 20 bis 22\n# 3. Konvertiere \"character\" zu \"numeric\"\n# 4. Subtrahiere 273.15\n# 5. Berechne den Mittlwert\n\noutput <- mean(subtrahieren(as.numeric(substr(diary, 20, 22)),273.15))\n#                                             \\_1_/\n#                                      \\________2__________/\n#                           \\___________________3___________/\n#              \\________________________________4__________________/\n#         \\_____________________________________5____________________/\n```\n:::\n\n\nDie ganze Operation liest sich etwas leichter, wenn diese sequentiell notiert wird:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp <- substr(diary, 20, 22)       # 1, 2\ntemp <- as.numeric(temp)            # 3\ntemp <- subtrahieren(temp, 273.15)  # 4\noutput <- mean(temp)                # 5\n```\n:::\n\n\nUmständlich ist dabei einfach, dass die Zwischenresultate immer abgespeichert und in der darauf folgenden Operation wieder abgerufen werden müssen. Hier kommt \"piping\" ins Spiel: *Mit \"piping\" wird der Output der einen Funktion der erste Parameter der darauf folgenden Funktion.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(magrittr)\n\ndiary %>%                            # 1\n  substr(20, 22) %>%                 # 2\n  as.numeric() %>%                   # 3 \n  subtrahieren(273.15) %>%           # 4\n  mean()                             # 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 74.18333\n```\n:::\n:::\n\n\nNoch ein Hinweis: die `%>%` Pipe Operation aus `magrittr` wurde in R so beliebt, dass in R 4.1 ein \"base R pipe\" eingeführt. Diese sieht folgendermassen aus:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiary |>                             # 1\n  substr(20, 22) |>                  # 2\n  as.numeric() |>                    # 3 \n  subtrahieren(273.15) |>            # 4\n  mean()                             # 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 74.18333\n```\n:::\n:::\n\n\n## Joins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudierende <- data.frame(\n  Matrikel_Nr = c(100002, 100003, 200003),\n  Studi = c(\"Patrick\", \"Manuela\", \"Eva\"),\n  PLZ = c(8006, 8001, 8820)\n)\n\nstudierende\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Matrikel_Nr   Studi  PLZ\n1      100002 Patrick 8006\n2      100003 Manuela 8001\n3      200003     Eva 8820\n```\n:::\n\n```{.r .cell-code}\nortschaften <- data.frame(\n  PLZ = c(8003, 8006, 8810, 8820),\n  Ortsname = c(\"Zürich\", \"Zürich\", \"Horgen\", \"Wädenswil\")\n)\n\nortschaften\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   PLZ  Ortsname\n1 8003    Zürich\n2 8006    Zürich\n3 8810    Horgen\n4 8820 Wädenswil\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load library\nlibrary(dplyr)\n\ninner_join(studierende, ortschaften, by = \"PLZ\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Matrikel_Nr   Studi  PLZ  Ortsname\n1      100002 Patrick 8006    Zürich\n2      200003     Eva 8820 Wädenswil\n```\n:::\n\n```{.r .cell-code}\nleft_join(studierende, ortschaften, by = \"PLZ\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Matrikel_Nr   Studi  PLZ  Ortsname\n1      100002 Patrick 8006    Zürich\n2      100003 Manuela 8001      <NA>\n3      200003     Eva 8820 Wädenswil\n```\n:::\n\n```{.r .cell-code}\nright_join(studierende, ortschaften, by = \"PLZ\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Matrikel_Nr   Studi  PLZ  Ortsname\n1      100002 Patrick 8006    Zürich\n2      200003     Eva 8820 Wädenswil\n3          NA    <NA> 8003    Zürich\n4          NA    <NA> 8810    Horgen\n```\n:::\n\n```{.r .cell-code}\nfull_join(studierende, ortschaften, by = \"PLZ\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Matrikel_Nr   Studi  PLZ  Ortsname\n1      100002 Patrick 8006    Zürich\n2      100003 Manuela 8001      <NA>\n3      200003     Eva 8820 Wädenswil\n4          NA    <NA> 8003    Zürich\n5          NA    <NA> 8810    Horgen\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstudierende <- data.frame(\n  Matrikel_Nr = c(100002, 100003, 200003),\n  Studi = c(\"Patrick\", \"Manuela\", \"Pascal\"),\n  Wohnort = c(8006, 8001, 8006)\n)\n\nleft_join(studierende, ortschaften, by = c(\"Wohnort\" = \"PLZ\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Matrikel_Nr   Studi Wohnort Ortsname\n1      100002 Patrick    8006   Zürich\n2      100003 Manuela    8001     <NA>\n3      200003  Pascal    8006   Zürich\n```\n:::\n:::\n",
    "supporting": [
      "Prepro2_Demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}