{
  "hash": "4a831d622b97bf3d75cebbc292cbfacf",
  "result": {
    "markdown": "---\ndate: 2022-12-12\nlesson: RaumAn5\nthema: Multi-Criteria Evaluation (MCE)\nindex: 1\nexecute: \n  echo: false\n---\n\n\n# Rauman 5: Übung B\n\nIn der letzten Übung (Übung A) haben wir die potentielle Standorte für Windkraftanalgen hinsichtlich vierer Distanzkriterien bewertet. In dieser Übung (Übung B) schliessen wir die Multikriterien-Evaluation ab, in dem wir:\n\n1. Folgende Kriterien mitberücksichtigen: Windgeschwindigkeit, Vereisungshäufigkeit und Hangneigung\n2. Die *Ausschlusskriterien* vom Resultat ausschliessen\n\nFür Punkt 1 müssen wir zusätzliche Daten einlesen, die im Rasterformat daherkommen. Punkt 2 beruht im Wesentlichen auf Daten, die wir bereits verwendet haben.\n\n\n::: {.cell file='rauman/Rauman5_Uebung_Uebung_A.qmd'}\n::: {.cell-output .cell-output-error}\n```\nError: <text>:4:23: unexpected symbol\n3: lesson: RaumAn5\n4: thema: Multi-Criteria Evaluation\n                         ^\n```\n:::\n:::\n\n\n<!--\n3. Je höher die Windgeschwindigkeit ist\n4. Je geringer die Vereisungshäufigkeit ist\n5. Je geringer die Hangneigung ist\n\nAls Auschlussgebiete gelten Flächen, wo keine Windkraftanlagen gebaut werden können. Dazu gehören bewohnte Flächen, nationale Schutzgebiete, Waldgebiete und Seen. Um diese Gebiete zu ermitteln müssen die entsprechenden Datensätze zusammengeführt und vom Resultat der *Potentialflächen* ausgeschlossen werden. \n-->\n\n## Übung 1: Rasterdaten einlesen\n\nZur Bewertung der Standorte Hinsichtlich Windgeschwindigkeit und Vereisungshäufigkeit stehen uns folgende Rasterdatensätze zur Verfügung. Lade die beiden nachfolgenden Datensätze herunter und mit der Funktion `rast()` in R ein.\n\n- [eis250m.tif](https://moodle.zhaw.ch/mod/resource/view.php?id=602288) (Vereisungshäufigkeit in Tage/Jahr)\n- [wind250m.tif](https://moodle.zhaw.ch/mod/resource/view.php?id=602297) (Durchschnittliche Windgeschwindigkeit)\n\nExplorieren Sie die Daten visuell und versuchen Sie ein Verständnis für die Datensätze zu bekommen. \n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\nError in rast(\"datasets/rauman/eis250m.tif\"): could not find function \"rast\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in rast(\"datasets/rauman/wind250m.tif\"): could not find function \"rast\"\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\nError in tm_shape(eis250m): could not find function \"tm_shape\"\n```\n:::\n:::\n\n\n\n## Übung 2: Wind und Eis bewerten\n\nDiese Rasterdaten müssen wir nicht weiter verarbeiten, ausser sie zu bewerten. Führen Sie diese Bewertung aufgrund nachstehender Tabelle durch. Nutzen Sie dafür die Funktion `classify()` analog @sec-classify1. \n\n<div class=\"mce-table\">\n\n\n::: {#tbl-bewerungstabelle-other .cell tbl-cap='Bewertungstabelle die Windgeschwindigkeit (m/s), Vereisungshäufigkeit (Tage/Jahr) und Hangneigung (Grad)'}\n\n```\nError in transmute(mutate(read_ods(reclassify_ods, x), Dist = paste(Von, : could not find function \"transmute\"\n```\n:::\n\n\n\n</div>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\nError in classify(wind250m, wind_klassen): could not find function \"classify\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in classify(eis250m, ice_klassen): could not find function \"classify\"\n```\n:::\n:::\n\n\n\n\n## Übung 3: Slope berechnen und Bewerten\n\nFür die Berechnung und anschilessende Bewertung der Hangneigung brauchen wir ein Höhenmodell. Lade das Höhenmodell, was wir bereits in @sec-raster-intro verwendet haben ([dhm250m.tif](https://moodle.zhaw.ch/mod/resource/view.php?id=694260)) in R ein, und berechne Anschliessend die Hangneigung mit der Funktion `terrain()` analog @sec-raster-slope (beachten Sie die Einheit des Output!). \n\nBewerten Sie die Hangneigung danach gemäss Tabelle @tbl-bewerungstabelle-other. \n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\nError in rast(\"datasets/rauman/dhm250m.tif\"): could not find function \"rast\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in terrain(dhm250m, v = \"slope\", unit = \"degrees\"): could not find function \"terrain\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in classify(neigung, neigung_relass_matrix): could not find function \"classify\"\n```\n:::\n:::\n\n\n\n\n## Übung 8: Ausschlusskriterien zusammenführen (optional)\n\nFühren Sie die Ausschlusskriterien Siedlungsgebiete, nationale Schutzgebiete, Seeflächen und Waldgebiete zusammen. Diese Vektordatensätze sind als Data Frames strukturiert und können daher durch einfaches Kombinieren zusammengeführt werden. Beachten Sie dabei, dass die Data Frames unterschiedliche Grössen haben. Zusätzlich müssen wir aus dem neu erstellten Vektordatensatz (Ausschlussgebiet) ein Raster erstellen. Dazu können Sie die Funktion `rasterize` verwenden. Die Ausgabe soll ein Raster mit 0 und 1 sein, wobei die Felder des Ausschlussbereichs den Wert 0 und die restlichen Felder den Wert 1 haben.\n  \n* **Tipp**: Um ein Raster mit nur 0 und 1 zu erhalten, verwenden Sie die Optionen \"rasterize\" field = 0 und background = 1.\n* **Tipp**: Um Vektordaten zu rastern, müssen Sie vorher ein leeres Raster erstellen. Dieses Raster sollte die gleichen Grenzen (extent), die gleiche Auflösung und das gleiche Koordinatensystem (crs) haben wie die anderen Rastersätze. Verwenden Sie dazu den folgenden Code.*\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Übung 9: Potenzielle Gebiete mit Ausschlusskriterien überschneiden (optional)\n\nDurch einfache Multiplikation des Ausschluss-Layers (Ergebnis aus Übung 2) mit dem gewichteten Overlay-Layer (Ergebnis aus Übung 7) schliessen wir alle Flächen mit dem Wert 0 (Ausschlussflächen) aus und behalten alle anderen Flächen mit dem Wert 1 (z.B. 0x3=0, 1x3=3). Erstellen Sie als Abschluss der Studie eine endgültige Darstellung der Potenzialflächen für Windkraftanlagen im Kanton Schwyz. Diskutieren Sie die Ergebnisse und bestimmen Sie drei mögliche Standorte, an denen eine konkrete Planung von Windkraftanlagen möglich wäre.\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}