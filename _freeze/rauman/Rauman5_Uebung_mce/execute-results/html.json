{
  "hash": "8320fe009a0f78c1b2596d2a61eacaa4",
  "result": {
    "markdown": "---\ndate: 2022-12-12\nlesson: RaumAn5\nthema: Multi-Criteria Evaluation (MCE)\nindex: 1\n---\n\n\n# Rauman 5: Übung\n\nThe following exercise may seem familiar to some of you, if you have attended the bachelor program. This MCE was already conducted in the bachelor module \"GIS\" by using ArcGIS Pro and its ModelBuilder (see @fig-mce-process).\n\n![MCE Process](images/mce_process.png){#fig-mce-process}\n\nThe goal of this exercise is to do the same MCE by just using R. We will mainly use functions from the R packages [sf](https://cran.r-project.org/web/packages/sf/sf.pdf) and [raster](https://cran.r-project.org/web/packages/raster/raster.pdf). Please have a look at the process model (see @fig-mce-process) that was created in ArcGIS Pro and try to figure out which functions in the two R packages correspond to the ones in the model. You will see that there are some similar functions available, but for some calculations a different approach is needed.\n\n## Exercises 1: Load and view data\n\nThe raster datasets look like the following:\n\n| Layer | Coord. System | Description | Type | Exclusion Area | \n|:---|:---|:---|:---|:---|\n| [dhm25m.tif](https://moodle.zhaw.ch/mod/resource/view.php?id=602285) | CH1903/LV03 | Terrain model (m) | Raster (25m) | No |\n| [eis25m.tif](https://moodle.zhaw.ch/mod/resource/view.php?id=602288) | CH1903/LV03 | \"Icing frequency (days/year) | Raster (25m) | No |\n| [wind25m.tif](https://moodle.zhaw.ch/mod/resource/view.php?id=602297) | CH1903/LV03 | Average wind speed (dm/s) | Raster (25m) | No |\n\nLaden Sie das File [windkraft_geodata.gpkg](https://moodle.zhaw.ch/mod/resource/view.php?id=663498) von Moodle herunter. \nHier befinden sich alle Datensätze, die im Laufe des Blocks \"Netzwerkanalyse\" benötigt werden:\n\n| Layer | Coord. System | Description | Type | Exclusion Area |\n|:---|:---|:---|:---|:---|\n| Bewohnte_Flaeche| CH1903/LV03 | Settlements (incl. buffer 200m) | Polygon | (Yes)/Distance |\n| Nationale_Schutzgebiete | CH1903/LV03 | National protection areas\"| Polygon | (Yes)/Distance |\n| Seeflaechen | CH1903/LV03 | Lake areas| Polygon | Yes |\n| Strassen | CH1903/LV03 | Streets| Line | No/Distance |\n| Untersuchungsgebiet_Schwyz | CH1903/LV03 | Study area, canton of Schwyz | Polygon | No |\n| Waldgebiete | CH1903/LV03 | Forest areas | Polygon | (Yes)/Distance |\n\nThe raster data can be loaded by using the function `terra::rast` and the vector layers with `sf::read_sf`. View the available data layers and plot them in an appealing way. For visualization you can use the functions `plot` for raster data and `ggplot` for vector data.\n\n<!-- Some data sets exceed the boundaries of the study area. Use the function `crop`  on raster data sets and `st_intersection` for sf/vector data to extract the relevant areas. -->\n\nWe will use the following packages in this exercise:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(terra)\nlibrary(dplyr)\nlibrary(tmap)\n```\n:::\n\n\n\n\n\n\n\n\n## Exercise 2: Merge exclusion criteria\n\nMerge the exclusion criteria settlement areas, national protected areas, lake areas and forest areas. These vector data sets are structured as data frames and therefore can be merged by simply combining them. Keep in mind that the data frames have different sizes. Additionally, we need to create a raster out of the newly created vector data set (exclusion area). For that you can use the function `rasterize`. The output should be a raster with 0 and 1, where the fields of the exclusion area have values of 0 and the remaining fields have values of 1 (see Figure \\ref(fig:figrasterizeexclusioncriteria)).\n  \n* ***Tip**: To achieve a raster with only 0 and 1 use the `rasterize` options field = 0 and background = 1.*\n* ***Tip**: In order to rasterize vector data, you need to create an empty raster beforehand. This raster should have the same boundaries (extent), resolution and coordinate system (crs) as the other raster sets. Use the following code to do so.*\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nr <- terra::rast(ext(kt_schwyz), \n          resolution = c(250, 250), \n          crs = \"EPSG:21781\")\n```\n:::\n\n  \n![](images/exclusion_areas.png){width=50%}\n\n\n\n\n\n## Exercise 3: Calculate slope\n\nNext, calculate the slope in degrees based on the terrain model (dhm25m). The terra package gives you a very helpful function called `terrain`. \n\n***Tip**: When using the terrain function use the following options: v=\"slope\", unit=\"degrees\", neighbors=8.*\n\n![](images/slope.png){width=50%}\n\n\n\n\n\n## Exercise 4: Calculate distances to criteria\n\nWithin the evaluation of suitable sites for wind turbines, the distance to roads, forest areas, national protected areas and inhabited areas are relevant. Depending on the criteria, a short or long distance has a positive influence on the evaluation of potential sites. For this purpose, perform a distance analysis with the selected criteria raster layers. Use the raster function `distance` for this calculation. \n\n* ***Tip**: In order to perform the `distance` function, you need to `rasterize` the criteria as well. You can use the same command as in exercise 2 but use only option field = 1.*\n* ***Tip**: Use the `crop` function again to get only relevant data in the study area.*\n\n![](images/d_to_settlements.png){width=50%}\n\n\n\n\n\n## Exercise 5: Standardize and grade criteria (grading)\n\nThe data layers slope, wind speed, icing frequency and the in exercise 4 calculated distance layers have different units (dm/s, degrees, d/yr and m). These units can't be directly calculated with each other. Therefore, the different layers need to be operationalized by performing a linear grading. The linear grading is done by using the function `reclassify`. Use the  standards for the reclassification in Figure \\ref(fig:figreclassify).\n\n* ***Tip**: Keep in mind the min and max values of each raster layer.*\n* ***Tip**: Here is an example code to reclassify the distances to settlements.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsettlements_max <- minmax(settlements_ed)[2]\n\nreclass_settlements <- c(0,80,0,\n                        80,160,0.1,\n                        160,240,0.2,\n                        240,320,0.3,\n                        320,400,0.4,\n                        400,480,0.5,\n                        480,560,0.6,\n                        560,640,0.7,\n                        640,720,0.8,\n                        720,800,0.9,\n                        800,settlements_max,1.0) |> matrix(ncol = 3, byrow = TRUE)\nreclass_settlements_ed <- terra::classify(settlements_ed, reclass_settlements)\n```\n:::\n\n\n::: {#fig-mce-reclassify layout-ncol=2}\n![](images/mce_reclassify_1.png)\n\n![](images/mce_reclassify_2.png)\n\nMCE Reclassify\n:::\n\n![](images/d_to_settlements_reclassified.png){width=50%}\n\n\n\n\n\n## Exercise 6: Weighting criteria with AHP\n\nPerform an AHP to weight the criteria underlying the MCE. First compare the criteria in pairs, and then calculate the weights - as you have learned in last week's lesson. In the end you should have a list of 7 weights as shown below.\n\n***Tip**: Check exercise 2 and 3 from last week's session. Use the prepared R code to create your ahp matrix.*\n\n          Wind       Streets          Ice    Settlements       Forest         Slope  Protected areas \n    0.33862692    0.09816760    0.06166626    0.24969460    0.03515759    0.18043000      0.03625702 \n  \n\n::: {.cell}\n\n```{.r .cell-code}\nahp_matrix <- c(\n  1, 0, 0, 0, 0, 0, 0, #Wind\n  0, 1, 0, 0, 0, 0, 0, #Distance to streets\n  0, 0, 1, 0, 0, 0, 0, #Ice\n  0, 0, 0, 1, 0, 0, 0, #Distance to settlements\n  0, 0, 0, 0, 1, 0, 0, #Distance to forests\n  0, 0, 0, 0, 0, 1, 0, #Slope\n  0, 0, 0, 0, 0, 0, 1  #Distance to protected areas\n) |> matrix(ncol = 7, byrow = TRUE)\n```\n:::\n\n\n\n\n## Exercise 7: Weighted Overlay\n\nThe linearly ranked criteria (Exercise 5) are now to be combined with each other, taking into account the weighting determined using the AHP (Exercise 6). This weighted overlay can be performed by using raster calculations and simply multiplying each criteria with its weight and adding them together (see @fig-weighted-overlay).\n\n* ***Tip**: As the raster sets have slightly different origins, increase the tolerance by using rasterOptions(tolerance = 0.5).*\n* ***Tip**: Also keep in mind the order of the weights in your list when doing the multiplication.*\n\n![Weighted Overlay](images/weighted_overlay.png){#fig-weighted-overlay width=50%}\n\n\n\n\n\n## Exercise 8: Intersecting potential areas with exclusion criteria\n\nBy simply multiplying the exclusion layer (result from exercise 2) with the weighted overlay layer (result from exercise 7) we are excluding all areas with value 0 (exclusion areas) and keeping all other areas with value 1 (e.g. 0x3=0, 1x3=3). As a conclusion of the study, create a final plot of the potential areas for wind power plants in the canton of Schwyz (like @fig-potential-sites). Furthermore, discuss the results obtained and determine three possible locations within which concrete planning of wind power plants would be possible.\n\n![Potential Sites](images/potential_sites.png){#fig-potential-sites}\n\n\n\n",
    "supporting": [
      "Rauman5_Uebung_mce_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}