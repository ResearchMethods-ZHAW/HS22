{
  "hash": "6cff5f03f9783ce8125d0a0f816c197b",
  "result": {
    "markdown": "# Rauman 4: Ãœbung A\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\nNow that you have learned the theory, you will carry out concrete example of an Analytical Hierarchy Process (AHP). This is a manual approach to show you the basics of an AHP. If you want to build a more complex AHP you can use specific R AHP packages such as the [ahpsurvey package](https://cran.r-project.org/web/packages/ahpsurvey/vignettes/my-vignette.html).\n\n## Exercise 1: Define initial situation \n\nFirst think of an *actual decision* you are currently facing or have previously faced (e.g. buying a bicycle or renting an apartment) and define the following points.\n\n* A goal for your AHP (e.g. Buy a bike)\n* 4 criteria on which you want to base your decision (e.g. *Price*, *Distance to Work / School*, *Size*, *Scenic Beauty*)\n* 3 different options / alternatives (e.g. 3 different apartments)\n\n\n::: {.cell}\n\n:::\n\n\n## Exercise 2: Pairwise comparison (Paarweiser Vergleich 1 & 2)\n\nIn a first step each criterion needs to be compared with another criteria in pairs. Use the following scale for weighting the criteria (see table \\@ref(tab:ahprating)) . \n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n::: {.cell-output-display}\nTable: Scale for weighting the criteria.\n\n|Rating     |Definition                                              |\n|:----------|:-------------------------------------------------------|\n|1          |The two characteristics are equally important           |\n|3          |Criteria A is slightly more important than criteria B   |\n|5          |Criteria A is moderately more important than criteria B |\n|7          |Criteria A is strongly more important than criteria B   |\n|9          |Criteria A is absolutely more important than criteria B |\n|2, 4, 6, 8 |Intermediate Values                                     |\n:::\n:::\n\n\nYou can use the following code to create your weighting matrix. In the matrix, two criteria are always compared twice, and these two comparisons should be the reciprocal (\"Kehrwert\") of each other. To illustrate this, we have added one comparison which reads as follows: \n\n- Row 1, column 2:  *Criteria 1* is slightly more important than *Criteria 2*\n- Row 2, column 1:  *Criteria 2* is slightly less important than *Criteria 1*\n\nCreate this matrix comparison matching your criteria, replacing the `0` values with your weights according to table \\@ref(tab:ahprating). Note that all diagonal values should equal to `1`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairwise_comparison <- c(\n  1,   3, 0, 0,\n  1/3, 1, 0, 0,\n  0,   0, 1, 0,\n  0,   0, 0, 1\n) %>% matrix(ncol = 4, byrow = TRUE) \n```\n:::\n\n::: {.cell}\n\n:::\n\n\n**Tip**: Add column and row names so your matrix is more readable. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncriterias <- c(\"price\", \"distance\",\"size\", \"beauty\")\n\nrownames(pairwise_comparison) <- criterias\ncolnames(pairwise_comparison) <- criterias\n```\n:::\n\n\n## Exercise 3: Calculation of the criteria weights \n\n### Exercise 3.1: Normalization of matrix (Berechnung der Kritiriengewichte 1)\n\nIn the next step the matrix needs to be normalized (see figure \\@ref(fig:criteria-normalize). You can do this in the following two steps: \n\n1. Calculate the sum of each column using `colSums`. Store the output in a variable (e.g. `ahp_colsums`).\n2. Divide each value in the matrix by the corresponding column sum. To achieve this, you can use the `sweep()` function on the matrix, which is very similar to `apply` (use `MARGIN = 2` (columns), `STATS = ahp_colsums` and `FUN = \"/\"`).\n\n\n::: {.cell}\n\n:::\n\n\n![](rauman/images/criteria_normalize.png)\n\n### Exercise 3.2: Weighting of criteria (Berechnung der Kritiriengewichte 2)\n\nThis is the final step to calculate the weight of each criteria (see \\@ref(fig:weights-normalize)). To do so: \n\n1. calculate the sum of each row and store the output in a variable (e.g. `criteria_sum`). \n2. divide the `criteria_sum` by the sum of `criteria_sum` and store the output in a variable (e.g. `criteria_weight`).\n\nNote: The sum of `criteria_weight` should equal to 1\n\n\n\n\n\n![](rauman/images/weights_normalize.png)\n\n## Exercise 4: Consistency analysis (Konsistenzanalyse 1 & 2)\n\nAfter the pairwise comparison is done, a consistency analysis needs to be performed to check whether the pairwise comparisons are consistent or include contradictions. A certain inconsistency is allowed within the framework of an AHP, but it should not be too great.\n\nTo calculate consistency, you should proceed as explained in Slide 30 (Konsistenzanalyse 1) and the following steps:\n\n1. do a matrix multiplication (`%*%`) between `pairwise_comparison` and `criteria_weight`. \n\n\n::: {.cell}\n\n:::\n\n\n2. Divide the result of 1) by `criteria_weight`\n\n\n::: {.cell}\n\n:::\n\n\n3. Calculate $\\lambda_{max}$ by dividing the sum of the result you obtained in 2) by the number of criteria\n\n\n::: {.cell}\n\n:::\n\n\n4. calculate $CI$  ($CI = \\frac{\\lambda_{max} - n}{n-1}$), where `n` equals to the number of criteria\n\n\n::: {.cell}\n\n:::\n\n\n5. Determine $RI$ by consulting the table \\@ref(fig:randomindexbysaaty)\n\n\n::: {.cell}\n\n:::\n\n\n5. Calculate $CR$ ($CR = CI / RI$)\n\n\n::: {.cell}\n\n:::\n\n\n6. If CR > 0.1, you will need to re-evaluate your pairwise comparisons. \n\n\n\n\n\n![](rauman/images/ahp_random_index_by_saaty.png)\n\n## Congratulations!\n\nYou now have determined the weights on top of which you can build your decision and have determined if these weights are consistent or not. These next steps are technically very similar to what you did in the exercise above, so we will leave it up to you if you want to complete these steps or not. For sake of completness, the next step would be to:\n\n1. compare your options / alternatives with each other in a pairwise comparison (similar as to how you compared the criteria with each other). You do this for *every* criteria\n2. normalize your pairwise comparisons of your options (similar as to how how you normalized the pairwise comparisons of the criteria)\n3. Use the weights you determined in the exercise above to weigh your results from 2)\n4. Asses the best decision based on the result from 3)\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}