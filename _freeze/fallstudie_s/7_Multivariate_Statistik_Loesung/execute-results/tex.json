{
  "hash": "4ede11b1df2cc65e55ec9068f3bd2746",
  "result": {
    "markdown": "# 7. Lösung\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n# Aufgabe 1: Verbinden von Daten (Join)\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\n# 4.1 Einflussfaktoren Besucherzahl ####\n# Erstelle ein df indem die taeglichen Zaehldaten und Meteodaten vereint sind\numwelt <- inner_join(depo_d, meteo, by = c(\"Datum\" = \"time\"))\n# Das zusammenfuehren folgt evtl. in NA-Werten bei gewissen Tagen\nsum(is.na(umwelt))\n```\n:::\n\n\n\n# Aufgabe 2: Convinience Variablen, Faktoren, Skalieren\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\n# nochmals einige Convinience Variablen\numwelt <- umwelt%>%\n  mutate(Ferien = if_else(  \n    Datum >= Fruehlingsferien_2019_start & Datum <= Fruehlingsferien_2019_ende |\n      Datum >= Sommerferien_2019_start & Datum <= Sommerferien_2019_ende |\n      Datum >= Herbstferien_2019_start & Datum <= Herbstferien_2019_ende |\n      Datum >= Winterferien_2019_start & Datum <= Winterferien_2019_ende |\n      Datum >= Fruehlingsferien_2020_start & Datum <= Fruehlingsferien_2020_ende |\n      Datum >= Sommerferien_2020_start & Datum <= Sommerferien_2020_ende |\n      Datum >= Herbstferien_2020_start & Datum <= Herbstferien_2020_ende |\n      Datum >= Winterferien_2020_start & Datum <= Winterferien_2020_ende |\n      Datum >= Fruehlingsferien_2021_start & Datum <= Fruehlingsferien_2021_ende |\n      Datum >= Sommerferien_2021_start & Datum <= max(depo$Datum),\n        \"1\", \"0\"))%>%\n  mutate(Ferien = factor(Ferien))\n\n# Faktor und integer\n# Im GLMM wird die Kalenderwoche und das Jahr als random factor definiert. Dazu muss sie als\n# Faktor vorliegen.\numwelt <- umwelt %>% \n  mutate(Jahr = as.factor(Jahr)) %>% \n  mutate(KW = as.factor(KW))\n\n# Unser Modell kann nur mit ganzen Zahlen umgehen. Zum Glueck habe wir die Zaehldaten\n# bereits gerundet.\n\n# pruefe str des df\nsummary(umwelt)\nstr(umwelt)\nsum(is.na(umwelt))\n\n# unser Datensatz muss ein df sein, damit scale funktioniert\numwelt <- as.data.frame(umwelt)\n\n#  Variablen skalieren\n# Skalieren der Variablen, damit ihr Einfluss vergleichbar wird \n# (Problem verschiedene Skalen der Variablen (bspw. Temperatur in Grad Celsius, \n# Niederschlag in Millimeter und Sonnenscheindauer in Minuten)\n\numwelt <- umwelt %>% \n  mutate(tre200jx_scaled = scale(tre200jx), \n         rre150j0_scaled = scale(rre150j0), \n         sremaxdv_scaled = scale(sremaxdv))\n```\n:::\n\n\n\n# Aufgabe 3: Korrelationen und Variablenselektion\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\n# 4.2 Variablenselektion ####\n# Korrelierende Variablen koennen das Modelergebnis verfaelschen. Daher muss vor der\n# Modelldefinition auf Korrelation getestet werden.\n\n# Erklaerende Variablen definieren\n# Hier wird die Korrelation zwischen den (nummerischen) erklaerenden Variablen berechnet\ncor <-  cor(umwelt[,16:(ncol(umwelt))]) # in den [] waehle ich die skalierten Spalten.\n# Mit dem folgenden Code kann eine simple Korrelationsmatrix aufgebaut werden\n# hier kann auch die Schwelle für die Korrelation gesetzt werden, \n# 0.7 ist liberal / 0.5 konservativ\n# https://researchbasics.education.uconn.edu/r_critical_value_table/\ncor[abs(cor)<0.7] <-  0 #Setzt alle Werte kleiner 0.7 auf 0 (diese sind dann ok, alles groesser ist problematisch!)\ncor\n\n# Korrelationsmatrix erstellen\n# Zur Visualisierung kann ein einfacher Plot erstellt werden:\nchart.Correlation(umwelt[,16:(ncol(umwelt))], histogram=TRUE, pch=19)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-align='left' fig-pos='H'}\n:::\n:::\n\n\n\n# Aufgabe 4 (OPTIONAL): Automatische Variablenselektion\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\n# # Automatisierte Variablenselektion \n# # fuehre die dredge-Funktion und ein Modelaveraging durch\n# # Hier wird die Formel für die dredge-Funktion vorbereitet\n# f <- Total ~ Wochentag + Ferien + Phase +\n#   tre200jx_scaled + rre150j0_scaled + sremaxdv_scaled\n# # Jetzt kommt der Random-Factor hinzu und es wird eine Formel daraus gemacht\n# f_dredge <- paste(c(f, \"+ (1|KW)\", \"+ (1|Jahr)\"), collapse = \" \") %>% \n#   as.formula()\n# # Das Modell mit dieser Formel ausführen\n# m <- glmer(f_dredge, data = umwelt, family = poisson, na.action = \"na.fail\")\n# # Das Modell in die dredge-Funktion einfügen (siehe auch ?dredge)\n# all_m <- dredge(m)\n# # suche das beste Modell\n# print(all_m)\n# # Importance values der Variablen \n# # hier wird die wichtigkeit der Variablen in den verschiedenen Modellen abgelesen\n# MuMIn::importance(all_m) \n# \n# # Schliesslich wird ein Modelaverage durchgeführt \n# # Schwellenwert für das delta-AIC = 2\n# avgmodel <- model.avg(all_m, rank = \"AICc\", subset = delta < 500) \n# summary(avgmodel)\n```\n:::\n\n\n\n# Aufgabe 5: Verteilung der abhängigen Variabel pruefen\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\n# 4.3 Pruefe Verteilung ####\n# pruefe zuerst nochmals, ob wir NA im df haben:\nsum(is.na(umwelt$Total))\n\nf1<-fitdist(umwelt$Total,\"norm\")  # Normalverteilung\n# f1_1<-fitdist((umwelt$Total + 1),\"lnorm\")  # log-Normalvert (beachte, dass ich +1 rechne. \n# log muss positiv sein; allerdings kann man die\n# Verteilungen dann nicht mehr miteinander vergleichen). \nf2<-fitdist(umwelt$Total,\"pois\")  # Poisson\nf3<-fitdist(umwelt$Total,\"nbinom\")  # negativ binomial\nf4<-fitdist(umwelt$Total,\"exp\")  # exponentiell\n# f5<-fitdist(umwelt$Total,\"gamma\")  # gamma (berechnung mit meinen Daten nicht möglich)\nf6<-fitdist(umwelt$Total,\"logis\")  # logistisch\nf7<-fitdist(umwelt$Total,\"geom\")  # geometrisch\n# f8<-fitdist(umwelt$Total,\"weibull\")  # Weibull (berechnung mit meinen Daten nicht möglich)\n\ngofstat(list(f1,f2,f3,f4,f6,f7), \n        fitnames = c(\"Normalverteilung\", \"Poisson\",\n                     \"negativ binomial\",\"exponentiell\", \"logistisch\",\n                     \"geometrisch\"))\n\n# die 2 besten (gemaess Akaike's Information Criterion) als Plot + normalverteilt, \nplot.legend <- c(\"Normalverteilung\", \"exponentiell\", \"negativ binomial\")\n# vergleicht mehrere theoretische Verteilungen mit den empirischen Daten\ncdfcomp(list(f1, f4, f3), legendtext = plot.legend)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-7-1.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# --> Verteilung ist gemäss AICc negativ binomial. --> ich entscheide \n# mich für letztere.\n```\n:::\n\n\n\n# Aufgabe 6: Multivariates Modell berechnen\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\n# 4.4 Berechne verschiedene Modelle ####\n\n# Hinweise zu GLMM: https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html\n\n# Ich verwende hier die Funktion glmer aus der Bibliothek lme4. glmer sei neuer, \n# schneller und zuverlaessiger als vergleichbare Funktionen.\n# Die Totale Besucheranzahl soll durch verschiedene Parameter erklaert werden. \n# Die saisonalitaet (KW, Jahr) soll hierbei nicht beachtet werden, \n# sie wird als random Faktor bestimmt --> Saisonbereinigung.\n\n# Einfacher Start\n# Auch wenn wir gerade herausgefunden haben, dass die Verteilung negativ binomial ist,\n# berechne ich für den Vergleich zuerst ein einfaches Modell der Familie poisson.\nTages_Model <- glmer(Total ~ Wochentag + Ferien + Phase +\n                       tre200jx_scaled + rre150j0_scaled + sremaxdv_scaled +\n                       (1|KW) + (1|Jahr), family = poisson, data = umwelt)\n\nsummary(Tages_Model)\n# Inspektionsplots\nplot(Tages_Model, type = c(\"p\", \"smooth\"))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-1.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\nqqmath(Tages_Model)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-2.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# pruefe auf Overdispersion\ndispersion_glmer(Tages_Model) #it shouldn't be over 1.4\n# wir gut erklaert das Modell?\nr.squaredGLMM(Tages_Model) \n\n\n# Berechne ein negativ binomiales Modell\n# gemäss AICc die beste Verteilung\nTages_Model_nb <- glmer.nb(Total ~ Wochentag + Ferien + Phase +\n                             tre200jx_scaled + rre150j0_scaled + sremaxdv_scaled +\n                             (1|KW) + (1|Jahr), data = umwelt)\n\nsummary(Tages_Model_nb)\nplot(Tages_Model_nb, type = c(\"p\", \"smooth\"))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-3.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\nqqmath(Tages_Model_nb)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-4.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\ndispersion_glmer(Tages_Model_nb)\nr.squaredGLMM(Tages_Model_nb) \n\n\n# auf quadratischen Term testen (\"es gehen weniger Leute in den Wald, wenn es zu heiss ist\")\nTages_Model_nb_quad <- glmer.nb(Total ~ Wochentag + Ferien + Phase +\n                                  tre200jx_scaled + I(tre200jx_scaled^2) + \n                                  rre150j0_scaled + sremaxdv_scaled +\n                                  (1|KW) + (1|Jahr), data = umwelt)\n\nsummary(Tages_Model_nb_quad)\nplot(Tages_Model_nb_quad, type = c(\"p\", \"smooth\"))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-5.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\nqqmath(Tages_Model_nb_quad)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-6.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\ndispersion_glmer(Tages_Model_nb_quad)\nr.squaredGLMM(Tages_Model_nb_quad) \n\n# Interaktion testen, da Ferien und / oder Wochentage einen Einfluss auf\n# die Besuchszahlen waehrend des Lockown haben koennen!\n# (Achtung: Rechenintensiv!)\n# Tages_Model_nb_int <- glmer.nb(Anzahl_Total ~  Wochentag  * Ferien + Phase +\n#                                  tre200jx_scaled + I(tre200jx_scaled^2) * \n#                                  rre150j0_scaled + sremaxdv_scaled +\n#                                  (1|KW) + (1|Jahr), data = umwelt)\n# \n# summary(Tages_Model_nb_int)\n# plot(Tages_Model_nb_int, type = c(\"p\", \"smooth\"))\n# qqmath(Tages_Model_nb_int)\n# dispersion_glmer(Tages_Model_nb_int)\n# r.squaredGLMM(Tages_Model_nb_int) \n\n# Vergleich der Modellguete mittels AICc\ncand.models<-list()\ncand.models[[1]] <- Tages_Model\ncand.models[[2]] <- Tages_Model_nb\ncand.models[[3]] <- Tages_Model_nb_quad\n\nModnames<-c(\"Tages_Model\",\"Tages_Model_nb\", \n            \"Tages_Model_nb_quad\")\naictab(cand.set=cand.models,modnames=Modnames)\n#K = Anzahl geschaetzter Parameter (2 Funktionsparameter und die Varianz)\n#Delta_AICc <2 = Statistisch gleichwertig\n#AICcWt =  Akaike weight in %\n\n# --> Ich entscheide mich bei diesen drei Modellen für das Tages_Model_nb_quad\n# Warum: statistisch gleichwertig und ich denke die Quadratur macht Sinn!\n\n# Berechne ein Modell mit exponentieller Verteilung:\n# gemäss AICc der Verteilung die zweitbeste\n# https://stats.stackexchange.com/questions/240455/fitting-exponential-regression-model-by-mle\nTages_Model_exp <- glmer((Total+1) ~ Wochentag + Ferien + Phase +\n                           tre200jx_scaled + rre150j0_scaled + sremaxdv_scaled +\n                           (1|KW) + (1|Jahr), family = Gamma(link=\"log\"), data = umwelt)\n\nsummary(Tages_Model_exp, dispersion=1)\n# Inspektionsplots\nplot(Tages_Model_exp, type = c(\"p\", \"smooth\"))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-7.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\nqqmath(Tages_Model_exp)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-8.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# pruefe auf Overdispersion\ndispersion_glmer(Tages_Model_exp) #it shouldn't be over 1.4\n# wir gut erklaert das Modell?\nr.squaredGLMM(Tages_Model_exp) \n\n# --> Die zweitbeste Verteilung (exp) führt auch nicht dazu, dass die Modellvoraussetzungen besser\n# erfüllt werden\n\n# 4.5 Transformationen ####\n# Die Modellvoraussetzungen waren überall mehr oder weniger verletzt.\n# Das ist ein Problem, allerdings auch nicht ein so grosses.\n# (man sollte es aber trotzdem ernst nehmen)\n# Schielzeth et al. Robustness of linear mixed‐effects models to violations of distributional assumptions\n# https://besjournals.onlinelibrary.wiley.com/doi/10.1111/2041-210X.13434\n# Lo and Andrews, To transform or not to transform: using generalized linear mixed models to analyse reaction time data\n# https://www.frontiersin.org/articles/10.3389/fpsyg.2015.01171/full\n\n# die Lösung ist nun, die Daten zu transformieren:\n# mehr unter: https://www.datanovia.com/en/lessons/transform-data-to-normal-distribution-in-r/\n\n# berechne skewness coefficient \nlibrary(moments)\nskewness(umwelt$Total)\n# A positive value means the distribution is positively skewed (rechtsschief).\n# The most frequent values are low; tail is toward the high values (on the right-hand side)\n\n# log 10, da stark rechtsschief\nTages_Model_quad_Jahr_log10 <- lmer(log10(Total+1) ~ Wochentag + Ferien + Phase +\n                                             tre200jx_scaled + I(tre200jx_scaled^2) + \n                                             rre150j0_scaled + sremaxdv_scaled +\n                                             (1|KW) + (1|Jahr), data = umwelt)\nsummary(Tages_Model_quad_Jahr_log10)\nplot(Tages_Model_quad_Jahr_log10, type = c(\"p\", \"smooth\"))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-9.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\nqqmath(Tages_Model_quad_Jahr_log10)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-10.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\ndispersion_glmer(Tages_Model_quad_Jahr_log10)\nr.squaredGLMM(Tages_Model_quad_Jahr_log10) \n# lmer zeigt keine p-Werte, da diese schwer zu berechnen sind. Alternative Packages berechnen diese\n# anhand der Teststatistik. Achtung: die Werte sind wahrscheinlich nicht präzise!\n# https://stat.ethz.ch/pipermail/r-sig-mixed-models/2008q2/000904.html\ntab_model(Tages_Model_quad_Jahr_log10, transform = NULL, show.se = TRUE)\n\n\n# natural log, da stark rechtsschief\nTages_Model_quad_Jahr_ln <- lmer(log(Total+1) ~ Wochentag + Ferien + Phase +\n                                          tre200jx_scaled + I(tre200jx_scaled^2) + \n                                          rre150j0_scaled + sremaxdv_scaled +\n                                          (1|KW) + (1|Jahr), data = umwelt)\nsummary(Tages_Model_quad_Jahr_ln)\nplot(Tages_Model_quad_Jahr_ln, type = c(\"p\", \"smooth\"))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-11.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\nqqmath(Tages_Model_quad_Jahr_ln)\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-8-12.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\ndispersion_glmer(Tages_Model_quad_Jahr_ln)\nr.squaredGLMM(Tages_Model_quad_Jahr_ln) \n\n\n# --> Die Modellvoraussetzungen sind deutlich besser erfüllt jetzt wo wir Transformationen \n# benutzt haben. log10 und ln performen beide gleich gut. Da log10 in meinem Bsp\n# aber deutlich mehr der Varianz erklärt, entscheide ich mich schliesslich für dieses Modell.\n\n# Zusatz: ACHTUNG - Ruecktransformierte Regressionskoeffizienten zu erlangen (fuer die Interpretation, das Plotten), \n# ist zudem nicht moeglich (Regressionskoeffizienten sind nur im transformierten Raum linear). \n# Ein ruecktransformierter Regressionskoeffiziente haette eine nicht-lineare Beziehung mit der \n# abhaengigen Variable.\n\n# 4.6 Exportiere die Modellresultate ####\n# (des besten Modells)\ntab_model(Tages_Model_quad_Jahr_log10, transform = NULL, show.se = TRUE)\n# The marginal R squared values are those associated with your fixed effects, \n# the conditional ones are those of your fixed effects plus the random effects. \n# Usually we will be interested in the marginal effects.\n```\n:::\n\n\n\n# Aufgabe 7: Modellvisualisierung\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\n# 4.7 Visualisiere Modellresultate ####\n\n# ZUSATZ: Wir haben die Wetterparameter skaliert. \n# Fuer die Plots muss das beruecksichtigt werden: wir stellen nicht die wirklichen Werte\n# dar sondern die skalierten. Mit folgendem Befehl kann man die Skalierung nachvollziehen:\n# attributes(umwelt$tre200jx_scaled)\n# Die Skalierung kann rueckgaengig gemacht werden, indem man die Skalierten werte mit\n# dem scaling factor multipliziert und dann den Durchschnitt addiert:\n# Bsp.: d$s.x * attr(d$s.x, 'scaled:scale') + attr(d$s.x, 'scaled:center')\n# mehr dazu: https://stackoverflow.com/questions/10287545/backtransform-scale-for-plotting\n# --> wir bleiben aber bei den skalierten Werten, leben damit und sind uns dessen bewusst.\n\n# Auch beim Plotten der Modellresultate gilt: \n# visualisiere nur die Parameter welche nach der Modellselektion uebig bleiben\n# und signifikant sind!\n# plot_model / type = \"pred\" sagt die Werte \"voraus\"\n# achte auf gleiche Skalierung der y-Achse (Vergleichbarkeit)\n\n# Temperatur\nt <- plot_model(Tages_Model_quad_Jahr_log10, type = \"pred\", terms = \n                  \"tre200jx_scaled [all]\", # [all] = Model contains polynomial or cubic / \n                #quadratic terms. Consider using `terms=\"tre200jx_scaled [all]\"` \n                # to get smooth plots. See also package-vignette \n                # 'Marginal Effects at Specific Values'.\n                title = \"\", axis.title = c(\"Tagesmaximaltemperatur [°C]\", \n                                           \"Fussgaenger:innen pro Tag [log]\"))\n# fuege die Achsenbeschriftung hinzu. Hier wird auf die unskalierten Werte zugegriffen.\nlabels <- round(seq(floor(min(umwelt$tre200jx)), ceiling(max(umwelt$tre200jx)),\n                    # length.out = ___ --> Anpassen gemaess breaks auf dem Plot\n                    length.out = 5), 0) \n(Tempplot <- t + \n    scale_x_continuous(breaks = c(-2,-1,0,1,2), \n                       labels = c(labels))+\n    # fuege die y- Achsenbeschriftung hinzu. Hier transformieren wir die Werte zurueck\n    scale_y_continuous(breaks = c(0,0.5,1,1.5,2),\n                       labels = round(c(10^0, 10^0.5, 10^1, 10^1.5, 10^2),0),\n                       limits = c(0, 2))+ \n    theme_classic(base_size = 20))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-9-1.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# ggsave(\"temp.png\", width=15, height=15, units=\"cm\", dpi=1000, \n#        path = \"fallstudien/_R_analysis/results/\") \n\n# Regen\nt <- plot_model(Tages_Model_quad_Jahr_log10, type = \"pred\", terms = \"rre150j0_scaled\", \n                title = \"\", axis.title = c(\"Halbtagessumme Niederschlag [mm]\", \n                                           \"Fussgaenger:innen pro Tag [log]\"))\nlabels <- round(seq(floor(min(umwelt$rre150j0)), ceiling(max(umwelt$rre150j0)),\n                    length.out = 4), 0)\n(t + scale_x_continuous(breaks = c(0,4,8,12), labels = c(labels))+\n    scale_y_continuous(breaks = c(0,0.5,1,1.5,2),\n                       labels = round(c(10^0, 10^0.5, 10^1, 10^1.5, 10^2),0),\n                       limits = c(0, 2))+ \n    theme_classic(base_size = 20))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-9-2.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# ggsave(\"rain.png\", width=15, height=15, units=\"cm\", dpi=1000, \n#        path = \"fallstudien/_R_analysis/results/\") \n\n# Sonne\nt <- plot_model(Tages_Model_quad_Jahr_log10, type = \"pred\", terms = \"sremaxdv_scaled\", \n                title = \"\", axis.title = c(\"Sonnenscheindauer [min]\", \n                                           \"Fussgaenger:innen pro Tag [log]\"))\nlabels <- round(seq(floor(min(umwelt$sremaxdv)), ceiling(max(umwelt$sremaxdv)),\n                    length.out = 3), 0)\n(t + scale_x_continuous(breaks = c(-1,0,1), labels = c(labels))+\n    scale_y_continuous(breaks = c(0,0.5,1,1.5,2),\n                       labels = round(c(10^0, 10^0.5, 10^1, 10^1.5, 10^2),0),\n                       limits = c(0, 2))+ \n    theme_classic(base_size = 20))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-9-3.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# ggsave(\"sun.png\", width=15, height=15, units=\"cm\", dpi=1000, \n#        path = \"fallstudien/_R_analysis/results/\") \n\n# Phase\nt <- plot_model(Tages_Model_quad_Jahr_log10, type = \"pred\", terms = \"Phase\", \n                title = \"\", axis.title = c(\"Phase\", \n                                           \"Fussgaenger:innen pro Tag [log]\"))\n(lockplot <- t + \n    scale_y_continuous(breaks = c(0,0.5,1,1.5,2),\n                       labels = round(c(10^0, 10^0.5, 10^1, 10^1.5, 10^2),0),\n                       limits = c(0, 2))+ \n    theme_classic(base_size = 20))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-9-4.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# ggsave(\"phase.png\", width=15, height=15, units=\"cm\", dpi=1000, \n#        path = \"fallstudien/_R_analysis/results/\") \n\n# Ferien\nt <- plot_model(Tages_Model_quad_Jahr_log10, type = \"pred\", terms = \"Ferien\", \n                title = \"\", axis.title = c(\"Ferien\", \n                                           \"Fussgaenger:innen pro Tag [log]\"))\n(ferienplot <- t + scale_x_continuous(breaks = c(0,1), labels = c(\"Nein\", \"Ja\"))+\n    scale_y_continuous(breaks = c(0,0.5,1,1.5,2),\n                       labels = round(c(10^0, 10^0.5, 10^1, 10^1.5, 10^2),0),\n                       limits = c(0, 2))+ \n    theme_classic(base_size = 20))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-9-5.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# ggsave(\"ferien.png\", width=15, height=15, units=\"cm\", dpi=1000, \n#        path = \"fallstudien/_R_analysis/results/\") \n\n# Wochentag\nt <- plot_model(Tages_Model_quad_Jahr_log10, type = \"pred\", terms = \"Wochentag\", \n                title = \"\", axis.title = c(\"Wochentag\", \"Fussgaenger:innen pro Tag [log]\"))\n(wdplot <- t + scale_y_continuous(breaks = c(0,0.5,1,1.5,2),\n                                  labels = round(c(10^0, 10^0.5, 10^1, 10^1.5, 10^2),0),\n                                  limits = c(0, 2))+ \n    theme_classic(base_size = 20))+\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n```\n\n::: {.cell-output-display}\n![](7_Multivariate_Statistik_Loesung_files/figure-pdf/unnamed-chunk-9-6.pdf){fig-align='left' fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# ggsave(\"wd.png\", width=15, height=15, units=\"cm\", dpi=1000, \n#        path = \"fallstudien/_R_analysis/results/\") \n```\n:::\n",
    "supporting": [
      "7_Multivariate_Statistik_Loesung_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}