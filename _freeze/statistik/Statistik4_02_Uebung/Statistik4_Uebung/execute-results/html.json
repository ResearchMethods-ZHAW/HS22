{
  "hash": "b96d522dbf3c752eacc0252660866b92",
  "result": {
    "markdown": "---\ntitle: \"Übungen\"\nauthor: ???\ndescription: \" \"\ncategories: Statistik4\ndraft: false\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n###\tAufgabe 4.1: Nicht-lineare Regression\n\n**Datensatz [Curonian_Spit.csv](https://github.com/ResearchMethods-ZHAW/datasets/raw/main/statistik/Curonian_Spit.csv)**\n\nDieser enthält gemittelte Pflanzenartenzahlen (Species.richness) von\ngeschachtelten Plots (Vegetationsaufnahmen) der Pflanzengesellschaft LolioCynosuretum im Nationalpark Kurische Nehrung (Russland) auf\nFlächengrössen (Area) von 0.0001 bis 900 m².\n\n**Ermittelt den funktionellen Zusammenhang (das beste Modell), der die Zunahme der Artenzahl mit der Flächengrösse am besten beschreibt.Berücksichtigt dabei mindestens die Potenzfunktion (power function, die logarithmische Funktion (logarithmic function,und eine Funktion mit Sättigung (saturation, asymptote) eurer Wahl.**\n\n### Aufgabe 4.2N: Logistische Regression (NatWis)\n\n**Datensatz [polis.csv](https://github.com/ResearchMethods-ZHAW/datasets/raw/main/statistik/polis.csv)**\n\nDer Datensatz polis.csv beschreibt für 19 Inseln im Golf von Kalifornien, ob Eidechsen der Gattung Uta vorkommen (presence/absence: PA) in Abhängigkeit von der Form der Inseln (Verhältnis Umfang zu Fläche: RATIO). \n\n**Bitte prüft mit einer logistischen Regression, ob und ggf. wie die Inselform die Präsenz der Eidechsen beinflusst**\n\n\n### Aufgabe 4.2S: Multiple logistische Regression (SozWis)\n\nFührt mit dem Datensatz der [Gästebefragung](https://zenodo.org/record/3554884/files/2019_ZHAW_vonRickenbach_cleaned_recorded_survey_dataset_NOVANIMAL_anonym.csv?download=1) eine logistische Regression durch. Kann der Mensabesuch druch die sozioökonomischen Variablen (Alter, Geschlecht, Hochschulzugehörigkeit), wahrgenommener Fleischkonsum und Einstellung zu ?? vorhergesagt werden?\n\n**Hinweise:**\n\n- Das Item **tho_2** (\"Ich mache  mir allgemein Gedanken über die Folgen meiner Ernährungsgewohnheiten für die Umwelt.\") müsst ihr in einem ersten Schritt zu einer Dummy-Variable umcodieren: die Antwortkategorien «stimme eher zu» (=3) und «stimme zu» (=4) müsst ihr eine 1 zuweisen, den anderen zwei Kategorien eine 0. Hinweis dafür könnt ihr die Funktion dpylr::case_when() oder dpylr::if_else() verwenden.\n- Fehlende Werten könnt ihr weglassen (z.B. dpylr::drop_na())\n- Definiert das Modell und wendet es auf den Datensatz an\n- Berechnet eine Vorhersage des Modells mit predict()\n- Eruiert den Modellfit und die Modellgenauigkeit\n- Für Motivierte: Berechnet eine Konfusionsmatrix und zieht euer Fazit daraus\n- Stellt eure Ergebnisse angemessen dar (Text und/oder Tabelle)\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}